Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    FOR

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> expression
Rule 5     statement -> function_definition
Rule 6     expression -> expression PLUS term
Rule 7     expression -> expression MINUS term
Rule 8     expression -> term MULTIPLICATION factor
Rule 9     expression -> term DIVIDE factor
Rule 10    factor -> VAR
Rule 11    factor -> VAR EQUALS expression
Rule 12    factor -> TRUE
Rule 13    factor -> FALSE
Rule 14    expression -> expression AND expression
Rule 15    expression -> expression OR expression
Rule 16    expression -> NOT expression
Rule 17    expression -> expression EQUALSEQUALS expression
Rule 18    expression -> expression GREATER expression
Rule 19    expression -> expression LESS expression
Rule 20    expression -> expression GREATEREQUALS expression
Rule 21    expression -> expression LESSEQUALS expression
Rule 22    expression -> expression NOTEQUALS expression
Rule 23    expression -> term
Rule 24    term -> factor
Rule 25    factor -> AND
Rule 26    factor -> OR
Rule 27    factor -> NOT
Rule 28    factor -> IF
Rule 29    factor -> ELIF
Rule 30    factor -> ELSE
Rule 31    factor -> INTNUMBER
Rule 32    factor -> FLOATNUMBER
Rule 33    factor -> STRING
Rule 34    factor -> COMMENT
Rule 35    factor -> SHOW LPAREN expression RPAREN
Rule 36    factor -> LPAREN expression RPAREN
Rule 37    factor -> LBRACE expression RBRACE
Rule 38    factor -> MINUS factor
Rule 39    if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
Rule 40    if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
Rule 41    if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
Rule 42    if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE
Rule 43    elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
Rule 44    elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE
Rule 45    else_clause -> ELSE LBRACE statements RBRACE
Rule 46    else_clause -> empty
Rule 47    empty -> <empty>
Rule 48    expression -> if_statement
Rule 49    expression -> VAR
Rule 50    expression -> error
Rule 51    function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
Rule 52    parameters -> VAR
Rule 53    parameters -> VAR COMMA parameters
Rule 54    parameters -> empty
Rule 55    arguments -> expression
Rule 56    arguments -> expression COMMA arguments
Rule 57    arguments -> empty
Rule 58    function_call -> VAR LPAREN arguments RPAREN
Rule 59    statement -> RETURN expression
Rule 60    factor -> function_call
Rule 61    statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE

Terminals, with rules where they appear

AND                  : 14 25
COMMA                : 53 56
COMMENT              : 34
DIVIDE               : 9
DO                   : 
ELIF                 : 29 43 44
ELSE                 : 30 45
EQUALS               : 11
EQUALSEQUALS         : 17
FALSE                : 13
FLOATNUMBER          : 32
FOR                  : 
FUNCTION             : 51
GREATER              : 18
GREATEREQUALS        : 20
IF                   : 28 39 40 41 42
INTNUMBER            : 31
LBRACE               : 37 39 40 41 42 43 44 45 51 61
LESS                 : 19
LESSEQUALS           : 21
LPAREN               : 35 36 39 40 41 42 43 44 51 58 61
MINUS                : 7 38
MULTIPLICATION       : 8
NOT                  : 16 27
NOTEQUALS            : 22
OR                   : 15 26
PLUS                 : 6
RBRACE               : 37 39 40 41 42 43 44 45 51 61
RETURN               : 59
RPAREN               : 35 36 39 40 41 42 43 44 51 58 61
SHOW                 : 35
STRING               : 33
TRUE                 : 12
VAR                  : 10 11 49 51 52 53 58
WHILE                : 61
error                : 50

Nonterminals, with rules where they appear

arguments            : 56 58
elif_clauses         : 39 40 43
else_clause          : 39 41
empty                : 46 54 57
expression           : 4 6 7 11 14 14 15 15 16 17 17 18 18 19 19 20 20 21 21 22 22 35 36 37 39 40 41 42 43 44 55 56 59 61
factor               : 8 9 24 38
function_call        : 60
function_definition  : 5
if_statement         : 48
parameters           : 51 53
program              : 0
statement            : 2 3
statements           : 1 2 39 40 41 42 43 44 45 51 61
term                 : 6 7 8 9 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    $end            reduce using rule 1 (program -> statements .)
    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    statement                      shift and go to state 31
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 3

    (3) statements -> statement .

    RETURN          reduce using rule 3 (statements -> statement .)
    WHILE           reduce using rule 3 (statements -> statement .)
    NOT             reduce using rule 3 (statements -> statement .)
    VAR             reduce using rule 3 (statements -> statement .)
    error           reduce using rule 3 (statements -> statement .)
    FUNCTION        reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    TRUE            reduce using rule 3 (statements -> statement .)
    FALSE           reduce using rule 3 (statements -> statement .)
    AND             reduce using rule 3 (statements -> statement .)
    OR              reduce using rule 3 (statements -> statement .)
    ELIF            reduce using rule 3 (statements -> statement .)
    ELSE            reduce using rule 3 (statements -> statement .)
    INTNUMBER       reduce using rule 3 (statements -> statement .)
    FLOATNUMBER     reduce using rule 3 (statements -> statement .)
    STRING          reduce using rule 3 (statements -> statement .)
    COMMENT         reduce using rule 3 (statements -> statement .)
    SHOW            reduce using rule 3 (statements -> statement .)
    LPAREN          reduce using rule 3 (statements -> statement .)
    LBRACE          reduce using rule 3 (statements -> statement .)
    MINUS           reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    RBRACE          reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RETURN          reduce using rule 4 (statement -> expression .)
    WHILE           reduce using rule 4 (statement -> expression .)
    NOT             reduce using rule 4 (statement -> expression .)
    VAR             reduce using rule 4 (statement -> expression .)
    error           reduce using rule 4 (statement -> expression .)
    FUNCTION        reduce using rule 4 (statement -> expression .)
    IF              reduce using rule 4 (statement -> expression .)
    TRUE            reduce using rule 4 (statement -> expression .)
    FALSE           reduce using rule 4 (statement -> expression .)
    ELIF            reduce using rule 4 (statement -> expression .)
    ELSE            reduce using rule 4 (statement -> expression .)
    INTNUMBER       reduce using rule 4 (statement -> expression .)
    FLOATNUMBER     reduce using rule 4 (statement -> expression .)
    STRING          reduce using rule 4 (statement -> expression .)
    COMMENT         reduce using rule 4 (statement -> expression .)
    SHOW            reduce using rule 4 (statement -> expression .)
    LPAREN          reduce using rule 4 (statement -> expression .)
    LBRACE          reduce using rule 4 (statement -> expression .)
    $end            reduce using rule 4 (statement -> expression .)
    RBRACE          reduce using rule 4 (statement -> expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! AND             [ reduce using rule 4 (statement -> expression .) ]
  ! OR              [ reduce using rule 4 (statement -> expression .) ]
  ! MINUS           [ reduce using rule 4 (statement -> expression .) ]


state 5

    (5) statement -> function_definition .

    RETURN          reduce using rule 5 (statement -> function_definition .)
    WHILE           reduce using rule 5 (statement -> function_definition .)
    NOT             reduce using rule 5 (statement -> function_definition .)
    VAR             reduce using rule 5 (statement -> function_definition .)
    error           reduce using rule 5 (statement -> function_definition .)
    FUNCTION        reduce using rule 5 (statement -> function_definition .)
    IF              reduce using rule 5 (statement -> function_definition .)
    TRUE            reduce using rule 5 (statement -> function_definition .)
    FALSE           reduce using rule 5 (statement -> function_definition .)
    AND             reduce using rule 5 (statement -> function_definition .)
    OR              reduce using rule 5 (statement -> function_definition .)
    ELIF            reduce using rule 5 (statement -> function_definition .)
    ELSE            reduce using rule 5 (statement -> function_definition .)
    INTNUMBER       reduce using rule 5 (statement -> function_definition .)
    FLOATNUMBER     reduce using rule 5 (statement -> function_definition .)
    STRING          reduce using rule 5 (statement -> function_definition .)
    COMMENT         reduce using rule 5 (statement -> function_definition .)
    SHOW            reduce using rule 5 (statement -> function_definition .)
    LPAREN          reduce using rule 5 (statement -> function_definition .)
    LBRACE          reduce using rule 5 (statement -> function_definition .)
    MINUS           reduce using rule 5 (statement -> function_definition .)
    $end            reduce using rule 5 (statement -> function_definition .)
    RBRACE          reduce using rule 5 (statement -> function_definition .)


state 6

    (59) statement -> RETURN . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 42
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 7

    (61) statement -> WHILE . LPAREN expression RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 43


state 8

    (36) factor -> LPAREN . expression RPAREN
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 44
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 9

    (37) factor -> LBRACE . expression RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 45
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 10

    (8) expression -> term . MULTIPLICATION factor
    (9) expression -> term . DIVIDE factor
    (23) expression -> term .

  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MULTIPLICATION  shift and go to state 46
    DIVIDE          shift and go to state 47
    PLUS            reduce using rule 23 (expression -> term .)
    MINUS           reduce using rule 23 (expression -> term .)
    AND             reduce using rule 23 (expression -> term .)
    OR              reduce using rule 23 (expression -> term .)
    EQUALSEQUALS    reduce using rule 23 (expression -> term .)
    GREATER         reduce using rule 23 (expression -> term .)
    LESS            reduce using rule 23 (expression -> term .)
    GREATEREQUALS   reduce using rule 23 (expression -> term .)
    LESSEQUALS      reduce using rule 23 (expression -> term .)
    NOTEQUALS       reduce using rule 23 (expression -> term .)
    RETURN          reduce using rule 23 (expression -> term .)
    WHILE           reduce using rule 23 (expression -> term .)
    NOT             reduce using rule 23 (expression -> term .)
    VAR             reduce using rule 23 (expression -> term .)
    error           reduce using rule 23 (expression -> term .)
    FUNCTION        reduce using rule 23 (expression -> term .)
    IF              reduce using rule 23 (expression -> term .)
    TRUE            reduce using rule 23 (expression -> term .)
    FALSE           reduce using rule 23 (expression -> term .)
    ELIF            reduce using rule 23 (expression -> term .)
    ELSE            reduce using rule 23 (expression -> term .)
    INTNUMBER       reduce using rule 23 (expression -> term .)
    FLOATNUMBER     reduce using rule 23 (expression -> term .)
    STRING          reduce using rule 23 (expression -> term .)
    COMMENT         reduce using rule 23 (expression -> term .)
    SHOW            reduce using rule 23 (expression -> term .)
    LPAREN          reduce using rule 23 (expression -> term .)
    LBRACE          reduce using rule 23 (expression -> term .)
    $end            reduce using rule 23 (expression -> term .)
    RBRACE          reduce using rule 23 (expression -> term .)
    RPAREN          reduce using rule 23 (expression -> term .)
    COMMA           reduce using rule 23 (expression -> term .)

  ! MULTIPLICATION  [ reduce using rule 23 (expression -> term .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> term .) ]


state 11

    (38) factor -> MINUS . factor
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    VAR             shift and go to state 49
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    NOT             shift and go to state 50
    IF              shift and go to state 51
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    factor                         shift and go to state 48
    function_call                  shift and go to state 30

state 12

    (24) term -> factor .

    MULTIPLICATION  reduce using rule 24 (term -> factor .)
    DIVIDE          reduce using rule 24 (term -> factor .)
    PLUS            reduce using rule 24 (term -> factor .)
    MINUS           reduce using rule 24 (term -> factor .)
    AND             reduce using rule 24 (term -> factor .)
    OR              reduce using rule 24 (term -> factor .)
    EQUALSEQUALS    reduce using rule 24 (term -> factor .)
    GREATER         reduce using rule 24 (term -> factor .)
    LESS            reduce using rule 24 (term -> factor .)
    GREATEREQUALS   reduce using rule 24 (term -> factor .)
    LESSEQUALS      reduce using rule 24 (term -> factor .)
    NOTEQUALS       reduce using rule 24 (term -> factor .)
    RETURN          reduce using rule 24 (term -> factor .)
    WHILE           reduce using rule 24 (term -> factor .)
    NOT             reduce using rule 24 (term -> factor .)
    VAR             reduce using rule 24 (term -> factor .)
    error           reduce using rule 24 (term -> factor .)
    FUNCTION        reduce using rule 24 (term -> factor .)
    IF              reduce using rule 24 (term -> factor .)
    TRUE            reduce using rule 24 (term -> factor .)
    FALSE           reduce using rule 24 (term -> factor .)
    ELIF            reduce using rule 24 (term -> factor .)
    ELSE            reduce using rule 24 (term -> factor .)
    INTNUMBER       reduce using rule 24 (term -> factor .)
    FLOATNUMBER     reduce using rule 24 (term -> factor .)
    STRING          reduce using rule 24 (term -> factor .)
    COMMENT         reduce using rule 24 (term -> factor .)
    SHOW            reduce using rule 24 (term -> factor .)
    LPAREN          reduce using rule 24 (term -> factor .)
    LBRACE          reduce using rule 24 (term -> factor .)
    $end            reduce using rule 24 (term -> factor .)
    RBRACE          reduce using rule 24 (term -> factor .)
    RPAREN          reduce using rule 24 (term -> factor .)
    COMMA           reduce using rule 24 (term -> factor .)


state 13

    (25) factor -> AND .

    MULTIPLICATION  reduce using rule 25 (factor -> AND .)
    DIVIDE          reduce using rule 25 (factor -> AND .)
    PLUS            reduce using rule 25 (factor -> AND .)
    MINUS           reduce using rule 25 (factor -> AND .)
    AND             reduce using rule 25 (factor -> AND .)
    OR              reduce using rule 25 (factor -> AND .)
    EQUALSEQUALS    reduce using rule 25 (factor -> AND .)
    GREATER         reduce using rule 25 (factor -> AND .)
    LESS            reduce using rule 25 (factor -> AND .)
    GREATEREQUALS   reduce using rule 25 (factor -> AND .)
    LESSEQUALS      reduce using rule 25 (factor -> AND .)
    NOTEQUALS       reduce using rule 25 (factor -> AND .)
    RETURN          reduce using rule 25 (factor -> AND .)
    WHILE           reduce using rule 25 (factor -> AND .)
    NOT             reduce using rule 25 (factor -> AND .)
    VAR             reduce using rule 25 (factor -> AND .)
    error           reduce using rule 25 (factor -> AND .)
    FUNCTION        reduce using rule 25 (factor -> AND .)
    IF              reduce using rule 25 (factor -> AND .)
    TRUE            reduce using rule 25 (factor -> AND .)
    FALSE           reduce using rule 25 (factor -> AND .)
    ELIF            reduce using rule 25 (factor -> AND .)
    ELSE            reduce using rule 25 (factor -> AND .)
    INTNUMBER       reduce using rule 25 (factor -> AND .)
    FLOATNUMBER     reduce using rule 25 (factor -> AND .)
    STRING          reduce using rule 25 (factor -> AND .)
    COMMENT         reduce using rule 25 (factor -> AND .)
    SHOW            reduce using rule 25 (factor -> AND .)
    LPAREN          reduce using rule 25 (factor -> AND .)
    LBRACE          reduce using rule 25 (factor -> AND .)
    $end            reduce using rule 25 (factor -> AND .)
    RBRACE          reduce using rule 25 (factor -> AND .)
    RPAREN          reduce using rule 25 (factor -> AND .)
    COMMA           reduce using rule 25 (factor -> AND .)


state 14

    (26) factor -> OR .

    MULTIPLICATION  reduce using rule 26 (factor -> OR .)
    DIVIDE          reduce using rule 26 (factor -> OR .)
    PLUS            reduce using rule 26 (factor -> OR .)
    MINUS           reduce using rule 26 (factor -> OR .)
    AND             reduce using rule 26 (factor -> OR .)
    OR              reduce using rule 26 (factor -> OR .)
    EQUALSEQUALS    reduce using rule 26 (factor -> OR .)
    GREATER         reduce using rule 26 (factor -> OR .)
    LESS            reduce using rule 26 (factor -> OR .)
    GREATEREQUALS   reduce using rule 26 (factor -> OR .)
    LESSEQUALS      reduce using rule 26 (factor -> OR .)
    NOTEQUALS       reduce using rule 26 (factor -> OR .)
    RETURN          reduce using rule 26 (factor -> OR .)
    WHILE           reduce using rule 26 (factor -> OR .)
    NOT             reduce using rule 26 (factor -> OR .)
    VAR             reduce using rule 26 (factor -> OR .)
    error           reduce using rule 26 (factor -> OR .)
    FUNCTION        reduce using rule 26 (factor -> OR .)
    IF              reduce using rule 26 (factor -> OR .)
    TRUE            reduce using rule 26 (factor -> OR .)
    FALSE           reduce using rule 26 (factor -> OR .)
    ELIF            reduce using rule 26 (factor -> OR .)
    ELSE            reduce using rule 26 (factor -> OR .)
    INTNUMBER       reduce using rule 26 (factor -> OR .)
    FLOATNUMBER     reduce using rule 26 (factor -> OR .)
    STRING          reduce using rule 26 (factor -> OR .)
    COMMENT         reduce using rule 26 (factor -> OR .)
    SHOW            reduce using rule 26 (factor -> OR .)
    LPAREN          reduce using rule 26 (factor -> OR .)
    LBRACE          reduce using rule 26 (factor -> OR .)
    $end            reduce using rule 26 (factor -> OR .)
    RBRACE          reduce using rule 26 (factor -> OR .)
    RPAREN          reduce using rule 26 (factor -> OR .)
    COMMA           reduce using rule 26 (factor -> OR .)


state 15

    (16) expression -> NOT . expression
    (27) factor -> NOT .
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for INTNUMBER resolved as shift
  ! shift/reduce conflict for FLOATNUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for SHOW resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    MULTIPLICATION  reduce using rule 27 (factor -> NOT .)
    DIVIDE          reduce using rule 27 (factor -> NOT .)
    PLUS            reduce using rule 27 (factor -> NOT .)
    EQUALSEQUALS    reduce using rule 27 (factor -> NOT .)
    GREATER         reduce using rule 27 (factor -> NOT .)
    LESS            reduce using rule 27 (factor -> NOT .)
    GREATEREQUALS   reduce using rule 27 (factor -> NOT .)
    LESSEQUALS      reduce using rule 27 (factor -> NOT .)
    NOTEQUALS       reduce using rule 27 (factor -> NOT .)
    RETURN          reduce using rule 27 (factor -> NOT .)
    WHILE           reduce using rule 27 (factor -> NOT .)
    FUNCTION        reduce using rule 27 (factor -> NOT .)
    $end            reduce using rule 27 (factor -> NOT .)
    RBRACE          reduce using rule 27 (factor -> NOT .)
    RPAREN          reduce using rule 27 (factor -> NOT .)
    COMMA           reduce using rule 27 (factor -> NOT .)
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

  ! MINUS           [ reduce using rule 27 (factor -> NOT .) ]
  ! AND             [ reduce using rule 27 (factor -> NOT .) ]
  ! OR              [ reduce using rule 27 (factor -> NOT .) ]
  ! NOT             [ reduce using rule 27 (factor -> NOT .) ]
  ! VAR             [ reduce using rule 27 (factor -> NOT .) ]
  ! error           [ reduce using rule 27 (factor -> NOT .) ]
  ! IF              [ reduce using rule 27 (factor -> NOT .) ]
  ! TRUE            [ reduce using rule 27 (factor -> NOT .) ]
  ! FALSE           [ reduce using rule 27 (factor -> NOT .) ]
  ! ELIF            [ reduce using rule 27 (factor -> NOT .) ]
  ! ELSE            [ reduce using rule 27 (factor -> NOT .) ]
  ! INTNUMBER       [ reduce using rule 27 (factor -> NOT .) ]
  ! FLOATNUMBER     [ reduce using rule 27 (factor -> NOT .) ]
  ! STRING          [ reduce using rule 27 (factor -> NOT .) ]
  ! COMMENT         [ reduce using rule 27 (factor -> NOT .) ]
  ! SHOW            [ reduce using rule 27 (factor -> NOT .) ]
  ! LPAREN          [ reduce using rule 27 (factor -> NOT .) ]
  ! LBRACE          [ reduce using rule 27 (factor -> NOT .) ]

    expression                     shift and go to state 52
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 16

    (48) expression -> if_statement .

    PLUS            reduce using rule 48 (expression -> if_statement .)
    MINUS           reduce using rule 48 (expression -> if_statement .)
    AND             reduce using rule 48 (expression -> if_statement .)
    OR              reduce using rule 48 (expression -> if_statement .)
    EQUALSEQUALS    reduce using rule 48 (expression -> if_statement .)
    GREATER         reduce using rule 48 (expression -> if_statement .)
    LESS            reduce using rule 48 (expression -> if_statement .)
    GREATEREQUALS   reduce using rule 48 (expression -> if_statement .)
    LESSEQUALS      reduce using rule 48 (expression -> if_statement .)
    NOTEQUALS       reduce using rule 48 (expression -> if_statement .)
    RETURN          reduce using rule 48 (expression -> if_statement .)
    WHILE           reduce using rule 48 (expression -> if_statement .)
    NOT             reduce using rule 48 (expression -> if_statement .)
    VAR             reduce using rule 48 (expression -> if_statement .)
    error           reduce using rule 48 (expression -> if_statement .)
    FUNCTION        reduce using rule 48 (expression -> if_statement .)
    IF              reduce using rule 48 (expression -> if_statement .)
    TRUE            reduce using rule 48 (expression -> if_statement .)
    FALSE           reduce using rule 48 (expression -> if_statement .)
    ELIF            reduce using rule 48 (expression -> if_statement .)
    ELSE            reduce using rule 48 (expression -> if_statement .)
    INTNUMBER       reduce using rule 48 (expression -> if_statement .)
    FLOATNUMBER     reduce using rule 48 (expression -> if_statement .)
    STRING          reduce using rule 48 (expression -> if_statement .)
    COMMENT         reduce using rule 48 (expression -> if_statement .)
    SHOW            reduce using rule 48 (expression -> if_statement .)
    LPAREN          reduce using rule 48 (expression -> if_statement .)
    LBRACE          reduce using rule 48 (expression -> if_statement .)
    $end            reduce using rule 48 (expression -> if_statement .)
    RBRACE          reduce using rule 48 (expression -> if_statement .)
    RPAREN          reduce using rule 48 (expression -> if_statement .)
    MULTIPLICATION  reduce using rule 48 (expression -> if_statement .)
    DIVIDE          reduce using rule 48 (expression -> if_statement .)
    COMMA           reduce using rule 48 (expression -> if_statement .)


state 17

    (49) expression -> VAR .
    (10) factor -> VAR .
    (11) factor -> VAR . EQUALS expression
    (58) function_call -> VAR . LPAREN arguments RPAREN

  ! reduce/reduce conflict for MULTIPLICATION resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for PLUS resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for MINUS resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for AND resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for OR resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for EQUALSEQUALS resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for GREATER resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for LESS resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for GREATEREQUALS resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for LESSEQUALS resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for NOT resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for VAR resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for error resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for IF resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for ELIF resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for INTNUMBER resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for FLOATNUMBER resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for COMMENT resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for SHOW resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for LBRACE resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for $end resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for RBRACE resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (factor -> VAR .)
  ! reduce/reduce conflict for COMMA resolved using rule 10 (factor -> VAR .)
  ! shift/reduce conflict for LPAREN resolved as shift
    MULTIPLICATION  reduce using rule 10 (factor -> VAR .)
    DIVIDE          reduce using rule 10 (factor -> VAR .)
    PLUS            reduce using rule 10 (factor -> VAR .)
    MINUS           reduce using rule 10 (factor -> VAR .)
    AND             reduce using rule 10 (factor -> VAR .)
    OR              reduce using rule 10 (factor -> VAR .)
    EQUALSEQUALS    reduce using rule 10 (factor -> VAR .)
    GREATER         reduce using rule 10 (factor -> VAR .)
    LESS            reduce using rule 10 (factor -> VAR .)
    GREATEREQUALS   reduce using rule 10 (factor -> VAR .)
    LESSEQUALS      reduce using rule 10 (factor -> VAR .)
    NOTEQUALS       reduce using rule 10 (factor -> VAR .)
    RETURN          reduce using rule 10 (factor -> VAR .)
    WHILE           reduce using rule 10 (factor -> VAR .)
    NOT             reduce using rule 10 (factor -> VAR .)
    VAR             reduce using rule 10 (factor -> VAR .)
    error           reduce using rule 10 (factor -> VAR .)
    FUNCTION        reduce using rule 10 (factor -> VAR .)
    IF              reduce using rule 10 (factor -> VAR .)
    TRUE            reduce using rule 10 (factor -> VAR .)
    FALSE           reduce using rule 10 (factor -> VAR .)
    ELIF            reduce using rule 10 (factor -> VAR .)
    ELSE            reduce using rule 10 (factor -> VAR .)
    INTNUMBER       reduce using rule 10 (factor -> VAR .)
    FLOATNUMBER     reduce using rule 10 (factor -> VAR .)
    STRING          reduce using rule 10 (factor -> VAR .)
    COMMENT         reduce using rule 10 (factor -> VAR .)
    SHOW            reduce using rule 10 (factor -> VAR .)
    LBRACE          reduce using rule 10 (factor -> VAR .)
    $end            reduce using rule 10 (factor -> VAR .)
    RBRACE          reduce using rule 10 (factor -> VAR .)
    RPAREN          reduce using rule 10 (factor -> VAR .)
    COMMA           reduce using rule 10 (factor -> VAR .)
    EQUALS          shift and go to state 53
    LPAREN          shift and go to state 54

  ! PLUS            [ reduce using rule 49 (expression -> VAR .) ]
  ! MINUS           [ reduce using rule 49 (expression -> VAR .) ]
  ! AND             [ reduce using rule 49 (expression -> VAR .) ]
  ! OR              [ reduce using rule 49 (expression -> VAR .) ]
  ! EQUALSEQUALS    [ reduce using rule 49 (expression -> VAR .) ]
  ! GREATER         [ reduce using rule 49 (expression -> VAR .) ]
  ! LESS            [ reduce using rule 49 (expression -> VAR .) ]
  ! GREATEREQUALS   [ reduce using rule 49 (expression -> VAR .) ]
  ! LESSEQUALS      [ reduce using rule 49 (expression -> VAR .) ]
  ! NOTEQUALS       [ reduce using rule 49 (expression -> VAR .) ]
  ! RETURN          [ reduce using rule 49 (expression -> VAR .) ]
  ! WHILE           [ reduce using rule 49 (expression -> VAR .) ]
  ! NOT             [ reduce using rule 49 (expression -> VAR .) ]
  ! VAR             [ reduce using rule 49 (expression -> VAR .) ]
  ! error           [ reduce using rule 49 (expression -> VAR .) ]
  ! FUNCTION        [ reduce using rule 49 (expression -> VAR .) ]
  ! IF              [ reduce using rule 49 (expression -> VAR .) ]
  ! TRUE            [ reduce using rule 49 (expression -> VAR .) ]
  ! FALSE           [ reduce using rule 49 (expression -> VAR .) ]
  ! ELIF            [ reduce using rule 49 (expression -> VAR .) ]
  ! ELSE            [ reduce using rule 49 (expression -> VAR .) ]
  ! INTNUMBER       [ reduce using rule 49 (expression -> VAR .) ]
  ! FLOATNUMBER     [ reduce using rule 49 (expression -> VAR .) ]
  ! STRING          [ reduce using rule 49 (expression -> VAR .) ]
  ! COMMENT         [ reduce using rule 49 (expression -> VAR .) ]
  ! SHOW            [ reduce using rule 49 (expression -> VAR .) ]
  ! LPAREN          [ reduce using rule 49 (expression -> VAR .) ]
  ! LBRACE          [ reduce using rule 49 (expression -> VAR .) ]
  ! $end            [ reduce using rule 49 (expression -> VAR .) ]
  ! RBRACE          [ reduce using rule 49 (expression -> VAR .) ]
  ! RPAREN          [ reduce using rule 49 (expression -> VAR .) ]
  ! MULTIPLICATION  [ reduce using rule 49 (expression -> VAR .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> VAR .) ]
  ! COMMA           [ reduce using rule 49 (expression -> VAR .) ]
  ! LPAREN          [ reduce using rule 10 (factor -> VAR .) ]


state 18

    (50) expression -> error .

    PLUS            reduce using rule 50 (expression -> error .)
    MINUS           reduce using rule 50 (expression -> error .)
    AND             reduce using rule 50 (expression -> error .)
    OR              reduce using rule 50 (expression -> error .)
    EQUALSEQUALS    reduce using rule 50 (expression -> error .)
    GREATER         reduce using rule 50 (expression -> error .)
    LESS            reduce using rule 50 (expression -> error .)
    GREATEREQUALS   reduce using rule 50 (expression -> error .)
    LESSEQUALS      reduce using rule 50 (expression -> error .)
    NOTEQUALS       reduce using rule 50 (expression -> error .)
    RETURN          reduce using rule 50 (expression -> error .)
    WHILE           reduce using rule 50 (expression -> error .)
    NOT             reduce using rule 50 (expression -> error .)
    VAR             reduce using rule 50 (expression -> error .)
    error           reduce using rule 50 (expression -> error .)
    FUNCTION        reduce using rule 50 (expression -> error .)
    IF              reduce using rule 50 (expression -> error .)
    TRUE            reduce using rule 50 (expression -> error .)
    FALSE           reduce using rule 50 (expression -> error .)
    ELIF            reduce using rule 50 (expression -> error .)
    ELSE            reduce using rule 50 (expression -> error .)
    INTNUMBER       reduce using rule 50 (expression -> error .)
    FLOATNUMBER     reduce using rule 50 (expression -> error .)
    STRING          reduce using rule 50 (expression -> error .)
    COMMENT         reduce using rule 50 (expression -> error .)
    SHOW            reduce using rule 50 (expression -> error .)
    LPAREN          reduce using rule 50 (expression -> error .)
    LBRACE          reduce using rule 50 (expression -> error .)
    $end            reduce using rule 50 (expression -> error .)
    RBRACE          reduce using rule 50 (expression -> error .)
    RPAREN          reduce using rule 50 (expression -> error .)
    MULTIPLICATION  reduce using rule 50 (expression -> error .)
    DIVIDE          reduce using rule 50 (expression -> error .)
    COMMA           reduce using rule 50 (expression -> error .)


state 19

    (51) function_definition -> FUNCTION . VAR LPAREN parameters RPAREN LBRACE statements RBRACE

    VAR             shift and go to state 55


state 20

    (39) if_statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE
    (28) factor -> IF .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 56
    MULTIPLICATION  reduce using rule 28 (factor -> IF .)
    DIVIDE          reduce using rule 28 (factor -> IF .)
    PLUS            reduce using rule 28 (factor -> IF .)
    MINUS           reduce using rule 28 (factor -> IF .)
    AND             reduce using rule 28 (factor -> IF .)
    OR              reduce using rule 28 (factor -> IF .)
    EQUALSEQUALS    reduce using rule 28 (factor -> IF .)
    GREATER         reduce using rule 28 (factor -> IF .)
    LESS            reduce using rule 28 (factor -> IF .)
    GREATEREQUALS   reduce using rule 28 (factor -> IF .)
    LESSEQUALS      reduce using rule 28 (factor -> IF .)
    NOTEQUALS       reduce using rule 28 (factor -> IF .)
    RETURN          reduce using rule 28 (factor -> IF .)
    WHILE           reduce using rule 28 (factor -> IF .)
    NOT             reduce using rule 28 (factor -> IF .)
    VAR             reduce using rule 28 (factor -> IF .)
    error           reduce using rule 28 (factor -> IF .)
    FUNCTION        reduce using rule 28 (factor -> IF .)
    IF              reduce using rule 28 (factor -> IF .)
    TRUE            reduce using rule 28 (factor -> IF .)
    FALSE           reduce using rule 28 (factor -> IF .)
    ELIF            reduce using rule 28 (factor -> IF .)
    ELSE            reduce using rule 28 (factor -> IF .)
    INTNUMBER       reduce using rule 28 (factor -> IF .)
    FLOATNUMBER     reduce using rule 28 (factor -> IF .)
    STRING          reduce using rule 28 (factor -> IF .)
    COMMENT         reduce using rule 28 (factor -> IF .)
    SHOW            reduce using rule 28 (factor -> IF .)
    LBRACE          reduce using rule 28 (factor -> IF .)
    $end            reduce using rule 28 (factor -> IF .)
    RBRACE          reduce using rule 28 (factor -> IF .)
    RPAREN          reduce using rule 28 (factor -> IF .)
    COMMA           reduce using rule 28 (factor -> IF .)

  ! LPAREN          [ reduce using rule 28 (factor -> IF .) ]


state 21

    (12) factor -> TRUE .

    MULTIPLICATION  reduce using rule 12 (factor -> TRUE .)
    DIVIDE          reduce using rule 12 (factor -> TRUE .)
    PLUS            reduce using rule 12 (factor -> TRUE .)
    MINUS           reduce using rule 12 (factor -> TRUE .)
    AND             reduce using rule 12 (factor -> TRUE .)
    OR              reduce using rule 12 (factor -> TRUE .)
    EQUALSEQUALS    reduce using rule 12 (factor -> TRUE .)
    GREATER         reduce using rule 12 (factor -> TRUE .)
    LESS            reduce using rule 12 (factor -> TRUE .)
    GREATEREQUALS   reduce using rule 12 (factor -> TRUE .)
    LESSEQUALS      reduce using rule 12 (factor -> TRUE .)
    NOTEQUALS       reduce using rule 12 (factor -> TRUE .)
    RETURN          reduce using rule 12 (factor -> TRUE .)
    WHILE           reduce using rule 12 (factor -> TRUE .)
    NOT             reduce using rule 12 (factor -> TRUE .)
    VAR             reduce using rule 12 (factor -> TRUE .)
    error           reduce using rule 12 (factor -> TRUE .)
    FUNCTION        reduce using rule 12 (factor -> TRUE .)
    IF              reduce using rule 12 (factor -> TRUE .)
    TRUE            reduce using rule 12 (factor -> TRUE .)
    FALSE           reduce using rule 12 (factor -> TRUE .)
    ELIF            reduce using rule 12 (factor -> TRUE .)
    ELSE            reduce using rule 12 (factor -> TRUE .)
    INTNUMBER       reduce using rule 12 (factor -> TRUE .)
    FLOATNUMBER     reduce using rule 12 (factor -> TRUE .)
    STRING          reduce using rule 12 (factor -> TRUE .)
    COMMENT         reduce using rule 12 (factor -> TRUE .)
    SHOW            reduce using rule 12 (factor -> TRUE .)
    LPAREN          reduce using rule 12 (factor -> TRUE .)
    LBRACE          reduce using rule 12 (factor -> TRUE .)
    $end            reduce using rule 12 (factor -> TRUE .)
    RBRACE          reduce using rule 12 (factor -> TRUE .)
    RPAREN          reduce using rule 12 (factor -> TRUE .)
    COMMA           reduce using rule 12 (factor -> TRUE .)


state 22

    (13) factor -> FALSE .

    MULTIPLICATION  reduce using rule 13 (factor -> FALSE .)
    DIVIDE          reduce using rule 13 (factor -> FALSE .)
    PLUS            reduce using rule 13 (factor -> FALSE .)
    MINUS           reduce using rule 13 (factor -> FALSE .)
    AND             reduce using rule 13 (factor -> FALSE .)
    OR              reduce using rule 13 (factor -> FALSE .)
    EQUALSEQUALS    reduce using rule 13 (factor -> FALSE .)
    GREATER         reduce using rule 13 (factor -> FALSE .)
    LESS            reduce using rule 13 (factor -> FALSE .)
    GREATEREQUALS   reduce using rule 13 (factor -> FALSE .)
    LESSEQUALS      reduce using rule 13 (factor -> FALSE .)
    NOTEQUALS       reduce using rule 13 (factor -> FALSE .)
    RETURN          reduce using rule 13 (factor -> FALSE .)
    WHILE           reduce using rule 13 (factor -> FALSE .)
    NOT             reduce using rule 13 (factor -> FALSE .)
    VAR             reduce using rule 13 (factor -> FALSE .)
    error           reduce using rule 13 (factor -> FALSE .)
    FUNCTION        reduce using rule 13 (factor -> FALSE .)
    IF              reduce using rule 13 (factor -> FALSE .)
    TRUE            reduce using rule 13 (factor -> FALSE .)
    FALSE           reduce using rule 13 (factor -> FALSE .)
    ELIF            reduce using rule 13 (factor -> FALSE .)
    ELSE            reduce using rule 13 (factor -> FALSE .)
    INTNUMBER       reduce using rule 13 (factor -> FALSE .)
    FLOATNUMBER     reduce using rule 13 (factor -> FALSE .)
    STRING          reduce using rule 13 (factor -> FALSE .)
    COMMENT         reduce using rule 13 (factor -> FALSE .)
    SHOW            reduce using rule 13 (factor -> FALSE .)
    LPAREN          reduce using rule 13 (factor -> FALSE .)
    LBRACE          reduce using rule 13 (factor -> FALSE .)
    $end            reduce using rule 13 (factor -> FALSE .)
    RBRACE          reduce using rule 13 (factor -> FALSE .)
    RPAREN          reduce using rule 13 (factor -> FALSE .)
    COMMA           reduce using rule 13 (factor -> FALSE .)


state 23

    (29) factor -> ELIF .

    MULTIPLICATION  reduce using rule 29 (factor -> ELIF .)
    DIVIDE          reduce using rule 29 (factor -> ELIF .)
    PLUS            reduce using rule 29 (factor -> ELIF .)
    MINUS           reduce using rule 29 (factor -> ELIF .)
    AND             reduce using rule 29 (factor -> ELIF .)
    OR              reduce using rule 29 (factor -> ELIF .)
    EQUALSEQUALS    reduce using rule 29 (factor -> ELIF .)
    GREATER         reduce using rule 29 (factor -> ELIF .)
    LESS            reduce using rule 29 (factor -> ELIF .)
    GREATEREQUALS   reduce using rule 29 (factor -> ELIF .)
    LESSEQUALS      reduce using rule 29 (factor -> ELIF .)
    NOTEQUALS       reduce using rule 29 (factor -> ELIF .)
    RETURN          reduce using rule 29 (factor -> ELIF .)
    WHILE           reduce using rule 29 (factor -> ELIF .)
    NOT             reduce using rule 29 (factor -> ELIF .)
    VAR             reduce using rule 29 (factor -> ELIF .)
    error           reduce using rule 29 (factor -> ELIF .)
    FUNCTION        reduce using rule 29 (factor -> ELIF .)
    IF              reduce using rule 29 (factor -> ELIF .)
    TRUE            reduce using rule 29 (factor -> ELIF .)
    FALSE           reduce using rule 29 (factor -> ELIF .)
    ELIF            reduce using rule 29 (factor -> ELIF .)
    ELSE            reduce using rule 29 (factor -> ELIF .)
    INTNUMBER       reduce using rule 29 (factor -> ELIF .)
    FLOATNUMBER     reduce using rule 29 (factor -> ELIF .)
    STRING          reduce using rule 29 (factor -> ELIF .)
    COMMENT         reduce using rule 29 (factor -> ELIF .)
    SHOW            reduce using rule 29 (factor -> ELIF .)
    LPAREN          reduce using rule 29 (factor -> ELIF .)
    LBRACE          reduce using rule 29 (factor -> ELIF .)
    $end            reduce using rule 29 (factor -> ELIF .)
    RBRACE          reduce using rule 29 (factor -> ELIF .)
    RPAREN          reduce using rule 29 (factor -> ELIF .)
    COMMA           reduce using rule 29 (factor -> ELIF .)


state 24

    (30) factor -> ELSE .

    MULTIPLICATION  reduce using rule 30 (factor -> ELSE .)
    DIVIDE          reduce using rule 30 (factor -> ELSE .)
    PLUS            reduce using rule 30 (factor -> ELSE .)
    MINUS           reduce using rule 30 (factor -> ELSE .)
    AND             reduce using rule 30 (factor -> ELSE .)
    OR              reduce using rule 30 (factor -> ELSE .)
    EQUALSEQUALS    reduce using rule 30 (factor -> ELSE .)
    GREATER         reduce using rule 30 (factor -> ELSE .)
    LESS            reduce using rule 30 (factor -> ELSE .)
    GREATEREQUALS   reduce using rule 30 (factor -> ELSE .)
    LESSEQUALS      reduce using rule 30 (factor -> ELSE .)
    NOTEQUALS       reduce using rule 30 (factor -> ELSE .)
    RETURN          reduce using rule 30 (factor -> ELSE .)
    WHILE           reduce using rule 30 (factor -> ELSE .)
    NOT             reduce using rule 30 (factor -> ELSE .)
    VAR             reduce using rule 30 (factor -> ELSE .)
    error           reduce using rule 30 (factor -> ELSE .)
    FUNCTION        reduce using rule 30 (factor -> ELSE .)
    IF              reduce using rule 30 (factor -> ELSE .)
    TRUE            reduce using rule 30 (factor -> ELSE .)
    FALSE           reduce using rule 30 (factor -> ELSE .)
    ELIF            reduce using rule 30 (factor -> ELSE .)
    ELSE            reduce using rule 30 (factor -> ELSE .)
    INTNUMBER       reduce using rule 30 (factor -> ELSE .)
    FLOATNUMBER     reduce using rule 30 (factor -> ELSE .)
    STRING          reduce using rule 30 (factor -> ELSE .)
    COMMENT         reduce using rule 30 (factor -> ELSE .)
    SHOW            reduce using rule 30 (factor -> ELSE .)
    LPAREN          reduce using rule 30 (factor -> ELSE .)
    LBRACE          reduce using rule 30 (factor -> ELSE .)
    $end            reduce using rule 30 (factor -> ELSE .)
    RBRACE          reduce using rule 30 (factor -> ELSE .)
    RPAREN          reduce using rule 30 (factor -> ELSE .)
    COMMA           reduce using rule 30 (factor -> ELSE .)


state 25

    (31) factor -> INTNUMBER .

    MULTIPLICATION  reduce using rule 31 (factor -> INTNUMBER .)
    DIVIDE          reduce using rule 31 (factor -> INTNUMBER .)
    PLUS            reduce using rule 31 (factor -> INTNUMBER .)
    MINUS           reduce using rule 31 (factor -> INTNUMBER .)
    AND             reduce using rule 31 (factor -> INTNUMBER .)
    OR              reduce using rule 31 (factor -> INTNUMBER .)
    EQUALSEQUALS    reduce using rule 31 (factor -> INTNUMBER .)
    GREATER         reduce using rule 31 (factor -> INTNUMBER .)
    LESS            reduce using rule 31 (factor -> INTNUMBER .)
    GREATEREQUALS   reduce using rule 31 (factor -> INTNUMBER .)
    LESSEQUALS      reduce using rule 31 (factor -> INTNUMBER .)
    NOTEQUALS       reduce using rule 31 (factor -> INTNUMBER .)
    RETURN          reduce using rule 31 (factor -> INTNUMBER .)
    WHILE           reduce using rule 31 (factor -> INTNUMBER .)
    NOT             reduce using rule 31 (factor -> INTNUMBER .)
    VAR             reduce using rule 31 (factor -> INTNUMBER .)
    error           reduce using rule 31 (factor -> INTNUMBER .)
    FUNCTION        reduce using rule 31 (factor -> INTNUMBER .)
    IF              reduce using rule 31 (factor -> INTNUMBER .)
    TRUE            reduce using rule 31 (factor -> INTNUMBER .)
    FALSE           reduce using rule 31 (factor -> INTNUMBER .)
    ELIF            reduce using rule 31 (factor -> INTNUMBER .)
    ELSE            reduce using rule 31 (factor -> INTNUMBER .)
    INTNUMBER       reduce using rule 31 (factor -> INTNUMBER .)
    FLOATNUMBER     reduce using rule 31 (factor -> INTNUMBER .)
    STRING          reduce using rule 31 (factor -> INTNUMBER .)
    COMMENT         reduce using rule 31 (factor -> INTNUMBER .)
    SHOW            reduce using rule 31 (factor -> INTNUMBER .)
    LPAREN          reduce using rule 31 (factor -> INTNUMBER .)
    LBRACE          reduce using rule 31 (factor -> INTNUMBER .)
    $end            reduce using rule 31 (factor -> INTNUMBER .)
    RBRACE          reduce using rule 31 (factor -> INTNUMBER .)
    RPAREN          reduce using rule 31 (factor -> INTNUMBER .)
    COMMA           reduce using rule 31 (factor -> INTNUMBER .)


state 26

    (32) factor -> FLOATNUMBER .

    MULTIPLICATION  reduce using rule 32 (factor -> FLOATNUMBER .)
    DIVIDE          reduce using rule 32 (factor -> FLOATNUMBER .)
    PLUS            reduce using rule 32 (factor -> FLOATNUMBER .)
    MINUS           reduce using rule 32 (factor -> FLOATNUMBER .)
    AND             reduce using rule 32 (factor -> FLOATNUMBER .)
    OR              reduce using rule 32 (factor -> FLOATNUMBER .)
    EQUALSEQUALS    reduce using rule 32 (factor -> FLOATNUMBER .)
    GREATER         reduce using rule 32 (factor -> FLOATNUMBER .)
    LESS            reduce using rule 32 (factor -> FLOATNUMBER .)
    GREATEREQUALS   reduce using rule 32 (factor -> FLOATNUMBER .)
    LESSEQUALS      reduce using rule 32 (factor -> FLOATNUMBER .)
    NOTEQUALS       reduce using rule 32 (factor -> FLOATNUMBER .)
    RETURN          reduce using rule 32 (factor -> FLOATNUMBER .)
    WHILE           reduce using rule 32 (factor -> FLOATNUMBER .)
    NOT             reduce using rule 32 (factor -> FLOATNUMBER .)
    VAR             reduce using rule 32 (factor -> FLOATNUMBER .)
    error           reduce using rule 32 (factor -> FLOATNUMBER .)
    FUNCTION        reduce using rule 32 (factor -> FLOATNUMBER .)
    IF              reduce using rule 32 (factor -> FLOATNUMBER .)
    TRUE            reduce using rule 32 (factor -> FLOATNUMBER .)
    FALSE           reduce using rule 32 (factor -> FLOATNUMBER .)
    ELIF            reduce using rule 32 (factor -> FLOATNUMBER .)
    ELSE            reduce using rule 32 (factor -> FLOATNUMBER .)
    INTNUMBER       reduce using rule 32 (factor -> FLOATNUMBER .)
    FLOATNUMBER     reduce using rule 32 (factor -> FLOATNUMBER .)
    STRING          reduce using rule 32 (factor -> FLOATNUMBER .)
    COMMENT         reduce using rule 32 (factor -> FLOATNUMBER .)
    SHOW            reduce using rule 32 (factor -> FLOATNUMBER .)
    LPAREN          reduce using rule 32 (factor -> FLOATNUMBER .)
    LBRACE          reduce using rule 32 (factor -> FLOATNUMBER .)
    $end            reduce using rule 32 (factor -> FLOATNUMBER .)
    RBRACE          reduce using rule 32 (factor -> FLOATNUMBER .)
    RPAREN          reduce using rule 32 (factor -> FLOATNUMBER .)
    COMMA           reduce using rule 32 (factor -> FLOATNUMBER .)


state 27

    (33) factor -> STRING .

    MULTIPLICATION  reduce using rule 33 (factor -> STRING .)
    DIVIDE          reduce using rule 33 (factor -> STRING .)
    PLUS            reduce using rule 33 (factor -> STRING .)
    MINUS           reduce using rule 33 (factor -> STRING .)
    AND             reduce using rule 33 (factor -> STRING .)
    OR              reduce using rule 33 (factor -> STRING .)
    EQUALSEQUALS    reduce using rule 33 (factor -> STRING .)
    GREATER         reduce using rule 33 (factor -> STRING .)
    LESS            reduce using rule 33 (factor -> STRING .)
    GREATEREQUALS   reduce using rule 33 (factor -> STRING .)
    LESSEQUALS      reduce using rule 33 (factor -> STRING .)
    NOTEQUALS       reduce using rule 33 (factor -> STRING .)
    RETURN          reduce using rule 33 (factor -> STRING .)
    WHILE           reduce using rule 33 (factor -> STRING .)
    NOT             reduce using rule 33 (factor -> STRING .)
    VAR             reduce using rule 33 (factor -> STRING .)
    error           reduce using rule 33 (factor -> STRING .)
    FUNCTION        reduce using rule 33 (factor -> STRING .)
    IF              reduce using rule 33 (factor -> STRING .)
    TRUE            reduce using rule 33 (factor -> STRING .)
    FALSE           reduce using rule 33 (factor -> STRING .)
    ELIF            reduce using rule 33 (factor -> STRING .)
    ELSE            reduce using rule 33 (factor -> STRING .)
    INTNUMBER       reduce using rule 33 (factor -> STRING .)
    FLOATNUMBER     reduce using rule 33 (factor -> STRING .)
    STRING          reduce using rule 33 (factor -> STRING .)
    COMMENT         reduce using rule 33 (factor -> STRING .)
    SHOW            reduce using rule 33 (factor -> STRING .)
    LPAREN          reduce using rule 33 (factor -> STRING .)
    LBRACE          reduce using rule 33 (factor -> STRING .)
    $end            reduce using rule 33 (factor -> STRING .)
    RBRACE          reduce using rule 33 (factor -> STRING .)
    RPAREN          reduce using rule 33 (factor -> STRING .)
    COMMA           reduce using rule 33 (factor -> STRING .)


state 28

    (34) factor -> COMMENT .

    MULTIPLICATION  reduce using rule 34 (factor -> COMMENT .)
    DIVIDE          reduce using rule 34 (factor -> COMMENT .)
    PLUS            reduce using rule 34 (factor -> COMMENT .)
    MINUS           reduce using rule 34 (factor -> COMMENT .)
    AND             reduce using rule 34 (factor -> COMMENT .)
    OR              reduce using rule 34 (factor -> COMMENT .)
    EQUALSEQUALS    reduce using rule 34 (factor -> COMMENT .)
    GREATER         reduce using rule 34 (factor -> COMMENT .)
    LESS            reduce using rule 34 (factor -> COMMENT .)
    GREATEREQUALS   reduce using rule 34 (factor -> COMMENT .)
    LESSEQUALS      reduce using rule 34 (factor -> COMMENT .)
    NOTEQUALS       reduce using rule 34 (factor -> COMMENT .)
    RETURN          reduce using rule 34 (factor -> COMMENT .)
    WHILE           reduce using rule 34 (factor -> COMMENT .)
    NOT             reduce using rule 34 (factor -> COMMENT .)
    VAR             reduce using rule 34 (factor -> COMMENT .)
    error           reduce using rule 34 (factor -> COMMENT .)
    FUNCTION        reduce using rule 34 (factor -> COMMENT .)
    IF              reduce using rule 34 (factor -> COMMENT .)
    TRUE            reduce using rule 34 (factor -> COMMENT .)
    FALSE           reduce using rule 34 (factor -> COMMENT .)
    ELIF            reduce using rule 34 (factor -> COMMENT .)
    ELSE            reduce using rule 34 (factor -> COMMENT .)
    INTNUMBER       reduce using rule 34 (factor -> COMMENT .)
    FLOATNUMBER     reduce using rule 34 (factor -> COMMENT .)
    STRING          reduce using rule 34 (factor -> COMMENT .)
    COMMENT         reduce using rule 34 (factor -> COMMENT .)
    SHOW            reduce using rule 34 (factor -> COMMENT .)
    LPAREN          reduce using rule 34 (factor -> COMMENT .)
    LBRACE          reduce using rule 34 (factor -> COMMENT .)
    $end            reduce using rule 34 (factor -> COMMENT .)
    RBRACE          reduce using rule 34 (factor -> COMMENT .)
    RPAREN          reduce using rule 34 (factor -> COMMENT .)
    COMMA           reduce using rule 34 (factor -> COMMENT .)


state 29

    (35) factor -> SHOW . LPAREN expression RPAREN

    LPAREN          shift and go to state 57


state 30

    (60) factor -> function_call .

    MULTIPLICATION  reduce using rule 60 (factor -> function_call .)
    DIVIDE          reduce using rule 60 (factor -> function_call .)
    PLUS            reduce using rule 60 (factor -> function_call .)
    MINUS           reduce using rule 60 (factor -> function_call .)
    AND             reduce using rule 60 (factor -> function_call .)
    OR              reduce using rule 60 (factor -> function_call .)
    EQUALSEQUALS    reduce using rule 60 (factor -> function_call .)
    GREATER         reduce using rule 60 (factor -> function_call .)
    LESS            reduce using rule 60 (factor -> function_call .)
    GREATEREQUALS   reduce using rule 60 (factor -> function_call .)
    LESSEQUALS      reduce using rule 60 (factor -> function_call .)
    NOTEQUALS       reduce using rule 60 (factor -> function_call .)
    RETURN          reduce using rule 60 (factor -> function_call .)
    WHILE           reduce using rule 60 (factor -> function_call .)
    NOT             reduce using rule 60 (factor -> function_call .)
    VAR             reduce using rule 60 (factor -> function_call .)
    error           reduce using rule 60 (factor -> function_call .)
    FUNCTION        reduce using rule 60 (factor -> function_call .)
    IF              reduce using rule 60 (factor -> function_call .)
    TRUE            reduce using rule 60 (factor -> function_call .)
    FALSE           reduce using rule 60 (factor -> function_call .)
    ELIF            reduce using rule 60 (factor -> function_call .)
    ELSE            reduce using rule 60 (factor -> function_call .)
    INTNUMBER       reduce using rule 60 (factor -> function_call .)
    FLOATNUMBER     reduce using rule 60 (factor -> function_call .)
    STRING          reduce using rule 60 (factor -> function_call .)
    COMMENT         reduce using rule 60 (factor -> function_call .)
    SHOW            reduce using rule 60 (factor -> function_call .)
    LPAREN          reduce using rule 60 (factor -> function_call .)
    LBRACE          reduce using rule 60 (factor -> function_call .)
    $end            reduce using rule 60 (factor -> function_call .)
    RBRACE          reduce using rule 60 (factor -> function_call .)
    RPAREN          reduce using rule 60 (factor -> function_call .)
    COMMA           reduce using rule 60 (factor -> function_call .)


state 31

    (2) statements -> statements statement .

    RETURN          reduce using rule 2 (statements -> statements statement .)
    WHILE           reduce using rule 2 (statements -> statements statement .)
    NOT             reduce using rule 2 (statements -> statements statement .)
    VAR             reduce using rule 2 (statements -> statements statement .)
    error           reduce using rule 2 (statements -> statements statement .)
    FUNCTION        reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    TRUE            reduce using rule 2 (statements -> statements statement .)
    FALSE           reduce using rule 2 (statements -> statements statement .)
    AND             reduce using rule 2 (statements -> statements statement .)
    OR              reduce using rule 2 (statements -> statements statement .)
    ELIF            reduce using rule 2 (statements -> statements statement .)
    ELSE            reduce using rule 2 (statements -> statements statement .)
    INTNUMBER       reduce using rule 2 (statements -> statements statement .)
    FLOATNUMBER     reduce using rule 2 (statements -> statements statement .)
    STRING          reduce using rule 2 (statements -> statements statement .)
    COMMENT         reduce using rule 2 (statements -> statements statement .)
    SHOW            reduce using rule 2 (statements -> statements statement .)
    LPAREN          reduce using rule 2 (statements -> statements statement .)
    LBRACE          reduce using rule 2 (statements -> statements statement .)
    MINUS           reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    RBRACE          reduce using rule 2 (statements -> statements statement .)


state 32

    (6) expression -> expression PLUS . term
    (24) term -> . factor
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    VAR             shift and go to state 49
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    NOT             shift and go to state 50
    IF              shift and go to state 51
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    term                           shift and go to state 58
    factor                         shift and go to state 12
    function_call                  shift and go to state 30

state 33

    (7) expression -> expression MINUS . term
    (24) term -> . factor
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    VAR             shift and go to state 49
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    NOT             shift and go to state 50
    IF              shift and go to state 51
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    term                           shift and go to state 59
    factor                         shift and go to state 12
    function_call                  shift and go to state 30

state 34

    (14) expression -> expression AND . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 60
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 35

    (15) expression -> expression OR . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 61
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 36

    (17) expression -> expression EQUALSEQUALS . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 62
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 37

    (18) expression -> expression GREATER . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 63
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 38

    (19) expression -> expression LESS . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 64
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 39

    (20) expression -> expression GREATEREQUALS . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 65
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 40

    (21) expression -> expression LESSEQUALS . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 66
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 41

    (22) expression -> expression NOTEQUALS . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 67
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 42

    (59) statement -> RETURN expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RETURN          reduce using rule 59 (statement -> RETURN expression .)
    WHILE           reduce using rule 59 (statement -> RETURN expression .)
    NOT             reduce using rule 59 (statement -> RETURN expression .)
    VAR             reduce using rule 59 (statement -> RETURN expression .)
    error           reduce using rule 59 (statement -> RETURN expression .)
    FUNCTION        reduce using rule 59 (statement -> RETURN expression .)
    IF              reduce using rule 59 (statement -> RETURN expression .)
    TRUE            reduce using rule 59 (statement -> RETURN expression .)
    FALSE           reduce using rule 59 (statement -> RETURN expression .)
    ELIF            reduce using rule 59 (statement -> RETURN expression .)
    ELSE            reduce using rule 59 (statement -> RETURN expression .)
    INTNUMBER       reduce using rule 59 (statement -> RETURN expression .)
    FLOATNUMBER     reduce using rule 59 (statement -> RETURN expression .)
    STRING          reduce using rule 59 (statement -> RETURN expression .)
    COMMENT         reduce using rule 59 (statement -> RETURN expression .)
    SHOW            reduce using rule 59 (statement -> RETURN expression .)
    LPAREN          reduce using rule 59 (statement -> RETURN expression .)
    LBRACE          reduce using rule 59 (statement -> RETURN expression .)
    $end            reduce using rule 59 (statement -> RETURN expression .)
    RBRACE          reduce using rule 59 (statement -> RETURN expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! AND             [ reduce using rule 59 (statement -> RETURN expression .) ]
  ! OR              [ reduce using rule 59 (statement -> RETURN expression .) ]
  ! MINUS           [ reduce using rule 59 (statement -> RETURN expression .) ]


state 43

    (61) statement -> WHILE LPAREN . expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 68
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 44

    (36) factor -> LPAREN expression . RPAREN
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

    RPAREN          shift and go to state 69
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41


state 45

    (37) factor -> LBRACE expression . RBRACE
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

    RBRACE          shift and go to state 70
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41


state 46

    (8) expression -> term MULTIPLICATION . factor
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    VAR             shift and go to state 49
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    NOT             shift and go to state 50
    IF              shift and go to state 51
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    factor                         shift and go to state 71
    function_call                  shift and go to state 30

state 47

    (9) expression -> term DIVIDE . factor
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    VAR             shift and go to state 49
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    NOT             shift and go to state 50
    IF              shift and go to state 51
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    factor                         shift and go to state 72
    function_call                  shift and go to state 30

state 48

    (38) factor -> MINUS factor .

    MULTIPLICATION  reduce using rule 38 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 38 (factor -> MINUS factor .)
    PLUS            reduce using rule 38 (factor -> MINUS factor .)
    MINUS           reduce using rule 38 (factor -> MINUS factor .)
    AND             reduce using rule 38 (factor -> MINUS factor .)
    OR              reduce using rule 38 (factor -> MINUS factor .)
    EQUALSEQUALS    reduce using rule 38 (factor -> MINUS factor .)
    GREATER         reduce using rule 38 (factor -> MINUS factor .)
    LESS            reduce using rule 38 (factor -> MINUS factor .)
    GREATEREQUALS   reduce using rule 38 (factor -> MINUS factor .)
    LESSEQUALS      reduce using rule 38 (factor -> MINUS factor .)
    NOTEQUALS       reduce using rule 38 (factor -> MINUS factor .)
    RETURN          reduce using rule 38 (factor -> MINUS factor .)
    WHILE           reduce using rule 38 (factor -> MINUS factor .)
    NOT             reduce using rule 38 (factor -> MINUS factor .)
    VAR             reduce using rule 38 (factor -> MINUS factor .)
    error           reduce using rule 38 (factor -> MINUS factor .)
    FUNCTION        reduce using rule 38 (factor -> MINUS factor .)
    IF              reduce using rule 38 (factor -> MINUS factor .)
    TRUE            reduce using rule 38 (factor -> MINUS factor .)
    FALSE           reduce using rule 38 (factor -> MINUS factor .)
    ELIF            reduce using rule 38 (factor -> MINUS factor .)
    ELSE            reduce using rule 38 (factor -> MINUS factor .)
    INTNUMBER       reduce using rule 38 (factor -> MINUS factor .)
    FLOATNUMBER     reduce using rule 38 (factor -> MINUS factor .)
    STRING          reduce using rule 38 (factor -> MINUS factor .)
    COMMENT         reduce using rule 38 (factor -> MINUS factor .)
    SHOW            reduce using rule 38 (factor -> MINUS factor .)
    LPAREN          reduce using rule 38 (factor -> MINUS factor .)
    LBRACE          reduce using rule 38 (factor -> MINUS factor .)
    $end            reduce using rule 38 (factor -> MINUS factor .)
    RBRACE          reduce using rule 38 (factor -> MINUS factor .)
    RPAREN          reduce using rule 38 (factor -> MINUS factor .)
    COMMA           reduce using rule 38 (factor -> MINUS factor .)


state 49

    (10) factor -> VAR .
    (11) factor -> VAR . EQUALS expression
    (58) function_call -> VAR . LPAREN arguments RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    MULTIPLICATION  reduce using rule 10 (factor -> VAR .)
    DIVIDE          reduce using rule 10 (factor -> VAR .)
    PLUS            reduce using rule 10 (factor -> VAR .)
    MINUS           reduce using rule 10 (factor -> VAR .)
    AND             reduce using rule 10 (factor -> VAR .)
    OR              reduce using rule 10 (factor -> VAR .)
    EQUALSEQUALS    reduce using rule 10 (factor -> VAR .)
    GREATER         reduce using rule 10 (factor -> VAR .)
    LESS            reduce using rule 10 (factor -> VAR .)
    GREATEREQUALS   reduce using rule 10 (factor -> VAR .)
    LESSEQUALS      reduce using rule 10 (factor -> VAR .)
    NOTEQUALS       reduce using rule 10 (factor -> VAR .)
    RETURN          reduce using rule 10 (factor -> VAR .)
    WHILE           reduce using rule 10 (factor -> VAR .)
    NOT             reduce using rule 10 (factor -> VAR .)
    VAR             reduce using rule 10 (factor -> VAR .)
    error           reduce using rule 10 (factor -> VAR .)
    FUNCTION        reduce using rule 10 (factor -> VAR .)
    IF              reduce using rule 10 (factor -> VAR .)
    TRUE            reduce using rule 10 (factor -> VAR .)
    FALSE           reduce using rule 10 (factor -> VAR .)
    ELIF            reduce using rule 10 (factor -> VAR .)
    ELSE            reduce using rule 10 (factor -> VAR .)
    INTNUMBER       reduce using rule 10 (factor -> VAR .)
    FLOATNUMBER     reduce using rule 10 (factor -> VAR .)
    STRING          reduce using rule 10 (factor -> VAR .)
    COMMENT         reduce using rule 10 (factor -> VAR .)
    SHOW            reduce using rule 10 (factor -> VAR .)
    LBRACE          reduce using rule 10 (factor -> VAR .)
    $end            reduce using rule 10 (factor -> VAR .)
    RBRACE          reduce using rule 10 (factor -> VAR .)
    RPAREN          reduce using rule 10 (factor -> VAR .)
    COMMA           reduce using rule 10 (factor -> VAR .)
    EQUALS          shift and go to state 53
    LPAREN          shift and go to state 54

  ! LPAREN          [ reduce using rule 10 (factor -> VAR .) ]


state 50

    (27) factor -> NOT .

    MULTIPLICATION  reduce using rule 27 (factor -> NOT .)
    DIVIDE          reduce using rule 27 (factor -> NOT .)
    PLUS            reduce using rule 27 (factor -> NOT .)
    MINUS           reduce using rule 27 (factor -> NOT .)
    AND             reduce using rule 27 (factor -> NOT .)
    OR              reduce using rule 27 (factor -> NOT .)
    EQUALSEQUALS    reduce using rule 27 (factor -> NOT .)
    GREATER         reduce using rule 27 (factor -> NOT .)
    LESS            reduce using rule 27 (factor -> NOT .)
    GREATEREQUALS   reduce using rule 27 (factor -> NOT .)
    LESSEQUALS      reduce using rule 27 (factor -> NOT .)
    NOTEQUALS       reduce using rule 27 (factor -> NOT .)
    RETURN          reduce using rule 27 (factor -> NOT .)
    WHILE           reduce using rule 27 (factor -> NOT .)
    NOT             reduce using rule 27 (factor -> NOT .)
    VAR             reduce using rule 27 (factor -> NOT .)
    error           reduce using rule 27 (factor -> NOT .)
    FUNCTION        reduce using rule 27 (factor -> NOT .)
    IF              reduce using rule 27 (factor -> NOT .)
    TRUE            reduce using rule 27 (factor -> NOT .)
    FALSE           reduce using rule 27 (factor -> NOT .)
    ELIF            reduce using rule 27 (factor -> NOT .)
    ELSE            reduce using rule 27 (factor -> NOT .)
    INTNUMBER       reduce using rule 27 (factor -> NOT .)
    FLOATNUMBER     reduce using rule 27 (factor -> NOT .)
    STRING          reduce using rule 27 (factor -> NOT .)
    COMMENT         reduce using rule 27 (factor -> NOT .)
    SHOW            reduce using rule 27 (factor -> NOT .)
    LPAREN          reduce using rule 27 (factor -> NOT .)
    LBRACE          reduce using rule 27 (factor -> NOT .)
    $end            reduce using rule 27 (factor -> NOT .)
    RBRACE          reduce using rule 27 (factor -> NOT .)
    RPAREN          reduce using rule 27 (factor -> NOT .)
    COMMA           reduce using rule 27 (factor -> NOT .)


state 51

    (28) factor -> IF .

    MULTIPLICATION  reduce using rule 28 (factor -> IF .)
    DIVIDE          reduce using rule 28 (factor -> IF .)
    PLUS            reduce using rule 28 (factor -> IF .)
    MINUS           reduce using rule 28 (factor -> IF .)
    AND             reduce using rule 28 (factor -> IF .)
    OR              reduce using rule 28 (factor -> IF .)
    EQUALSEQUALS    reduce using rule 28 (factor -> IF .)
    GREATER         reduce using rule 28 (factor -> IF .)
    LESS            reduce using rule 28 (factor -> IF .)
    GREATEREQUALS   reduce using rule 28 (factor -> IF .)
    LESSEQUALS      reduce using rule 28 (factor -> IF .)
    NOTEQUALS       reduce using rule 28 (factor -> IF .)
    RETURN          reduce using rule 28 (factor -> IF .)
    WHILE           reduce using rule 28 (factor -> IF .)
    NOT             reduce using rule 28 (factor -> IF .)
    VAR             reduce using rule 28 (factor -> IF .)
    error           reduce using rule 28 (factor -> IF .)
    FUNCTION        reduce using rule 28 (factor -> IF .)
    IF              reduce using rule 28 (factor -> IF .)
    TRUE            reduce using rule 28 (factor -> IF .)
    FALSE           reduce using rule 28 (factor -> IF .)
    ELIF            reduce using rule 28 (factor -> IF .)
    ELSE            reduce using rule 28 (factor -> IF .)
    INTNUMBER       reduce using rule 28 (factor -> IF .)
    FLOATNUMBER     reduce using rule 28 (factor -> IF .)
    STRING          reduce using rule 28 (factor -> IF .)
    COMMENT         reduce using rule 28 (factor -> IF .)
    SHOW            reduce using rule 28 (factor -> IF .)
    LPAREN          reduce using rule 28 (factor -> IF .)
    LBRACE          reduce using rule 28 (factor -> IF .)
    $end            reduce using rule 28 (factor -> IF .)
    RBRACE          reduce using rule 28 (factor -> IF .)
    RPAREN          reduce using rule 28 (factor -> IF .)
    COMMA           reduce using rule 28 (factor -> IF .)


state 52

    (16) expression -> NOT expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RETURN          reduce using rule 16 (expression -> NOT expression .)
    WHILE           reduce using rule 16 (expression -> NOT expression .)
    NOT             reduce using rule 16 (expression -> NOT expression .)
    VAR             reduce using rule 16 (expression -> NOT expression .)
    error           reduce using rule 16 (expression -> NOT expression .)
    FUNCTION        reduce using rule 16 (expression -> NOT expression .)
    IF              reduce using rule 16 (expression -> NOT expression .)
    TRUE            reduce using rule 16 (expression -> NOT expression .)
    FALSE           reduce using rule 16 (expression -> NOT expression .)
    ELIF            reduce using rule 16 (expression -> NOT expression .)
    ELSE            reduce using rule 16 (expression -> NOT expression .)
    INTNUMBER       reduce using rule 16 (expression -> NOT expression .)
    FLOATNUMBER     reduce using rule 16 (expression -> NOT expression .)
    STRING          reduce using rule 16 (expression -> NOT expression .)
    COMMENT         reduce using rule 16 (expression -> NOT expression .)
    SHOW            reduce using rule 16 (expression -> NOT expression .)
    LPAREN          reduce using rule 16 (expression -> NOT expression .)
    LBRACE          reduce using rule 16 (expression -> NOT expression .)
    $end            reduce using rule 16 (expression -> NOT expression .)
    RBRACE          reduce using rule 16 (expression -> NOT expression .)
    RPAREN          reduce using rule 16 (expression -> NOT expression .)
    MULTIPLICATION  reduce using rule 16 (expression -> NOT expression .)
    DIVIDE          reduce using rule 16 (expression -> NOT expression .)
    COMMA           reduce using rule 16 (expression -> NOT expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 16 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 16 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 16 (expression -> NOT expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 16 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 16 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 16 (expression -> NOT expression .) ]
  ! GREATEREQUALS   [ reduce using rule 16 (expression -> NOT expression .) ]
  ! LESSEQUALS      [ reduce using rule 16 (expression -> NOT expression .) ]
  ! NOTEQUALS       [ reduce using rule 16 (expression -> NOT expression .) ]


state 53

    (11) factor -> VAR EQUALS . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 73
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 54

    (58) function_call -> VAR LPAREN . arguments RPAREN
    (55) arguments -> . expression
    (56) arguments -> . expression COMMA arguments
    (57) arguments -> . empty
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (47) empty -> .
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    RPAREN          reduce using rule 47 (empty -> .)
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    arguments                      shift and go to state 74
    expression                     shift and go to state 75
    empty                          shift and go to state 76
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 55

    (51) function_definition -> FUNCTION VAR . LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 77


state 56

    (39) if_statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 78
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 57

    (35) factor -> SHOW LPAREN . expression RPAREN
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 79
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 58

    (6) expression -> expression PLUS term .

    PLUS            reduce using rule 6 (expression -> expression PLUS term .)
    MINUS           reduce using rule 6 (expression -> expression PLUS term .)
    AND             reduce using rule 6 (expression -> expression PLUS term .)
    OR              reduce using rule 6 (expression -> expression PLUS term .)
    EQUALSEQUALS    reduce using rule 6 (expression -> expression PLUS term .)
    GREATER         reduce using rule 6 (expression -> expression PLUS term .)
    LESS            reduce using rule 6 (expression -> expression PLUS term .)
    GREATEREQUALS   reduce using rule 6 (expression -> expression PLUS term .)
    LESSEQUALS      reduce using rule 6 (expression -> expression PLUS term .)
    NOTEQUALS       reduce using rule 6 (expression -> expression PLUS term .)
    RETURN          reduce using rule 6 (expression -> expression PLUS term .)
    WHILE           reduce using rule 6 (expression -> expression PLUS term .)
    NOT             reduce using rule 6 (expression -> expression PLUS term .)
    VAR             reduce using rule 6 (expression -> expression PLUS term .)
    error           reduce using rule 6 (expression -> expression PLUS term .)
    FUNCTION        reduce using rule 6 (expression -> expression PLUS term .)
    IF              reduce using rule 6 (expression -> expression PLUS term .)
    TRUE            reduce using rule 6 (expression -> expression PLUS term .)
    FALSE           reduce using rule 6 (expression -> expression PLUS term .)
    ELIF            reduce using rule 6 (expression -> expression PLUS term .)
    ELSE            reduce using rule 6 (expression -> expression PLUS term .)
    INTNUMBER       reduce using rule 6 (expression -> expression PLUS term .)
    FLOATNUMBER     reduce using rule 6 (expression -> expression PLUS term .)
    STRING          reduce using rule 6 (expression -> expression PLUS term .)
    COMMENT         reduce using rule 6 (expression -> expression PLUS term .)
    SHOW            reduce using rule 6 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 6 (expression -> expression PLUS term .)
    LBRACE          reduce using rule 6 (expression -> expression PLUS term .)
    $end            reduce using rule 6 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 6 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 6 (expression -> expression PLUS term .)
    MULTIPLICATION  reduce using rule 6 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 6 (expression -> expression PLUS term .)
    COMMA           reduce using rule 6 (expression -> expression PLUS term .)


state 59

    (7) expression -> expression MINUS term .

    PLUS            reduce using rule 7 (expression -> expression MINUS term .)
    MINUS           reduce using rule 7 (expression -> expression MINUS term .)
    AND             reduce using rule 7 (expression -> expression MINUS term .)
    OR              reduce using rule 7 (expression -> expression MINUS term .)
    EQUALSEQUALS    reduce using rule 7 (expression -> expression MINUS term .)
    GREATER         reduce using rule 7 (expression -> expression MINUS term .)
    LESS            reduce using rule 7 (expression -> expression MINUS term .)
    GREATEREQUALS   reduce using rule 7 (expression -> expression MINUS term .)
    LESSEQUALS      reduce using rule 7 (expression -> expression MINUS term .)
    NOTEQUALS       reduce using rule 7 (expression -> expression MINUS term .)
    RETURN          reduce using rule 7 (expression -> expression MINUS term .)
    WHILE           reduce using rule 7 (expression -> expression MINUS term .)
    NOT             reduce using rule 7 (expression -> expression MINUS term .)
    VAR             reduce using rule 7 (expression -> expression MINUS term .)
    error           reduce using rule 7 (expression -> expression MINUS term .)
    FUNCTION        reduce using rule 7 (expression -> expression MINUS term .)
    IF              reduce using rule 7 (expression -> expression MINUS term .)
    TRUE            reduce using rule 7 (expression -> expression MINUS term .)
    FALSE           reduce using rule 7 (expression -> expression MINUS term .)
    ELIF            reduce using rule 7 (expression -> expression MINUS term .)
    ELSE            reduce using rule 7 (expression -> expression MINUS term .)
    INTNUMBER       reduce using rule 7 (expression -> expression MINUS term .)
    FLOATNUMBER     reduce using rule 7 (expression -> expression MINUS term .)
    STRING          reduce using rule 7 (expression -> expression MINUS term .)
    COMMENT         reduce using rule 7 (expression -> expression MINUS term .)
    SHOW            reduce using rule 7 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 7 (expression -> expression MINUS term .)
    LBRACE          reduce using rule 7 (expression -> expression MINUS term .)
    $end            reduce using rule 7 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 7 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 7 (expression -> expression MINUS term .)
    MULTIPLICATION  reduce using rule 7 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 7 (expression -> expression MINUS term .)
    COMMA           reduce using rule 7 (expression -> expression MINUS term .)


state 60

    (14) expression -> expression AND expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RETURN          reduce using rule 14 (expression -> expression AND expression .)
    WHILE           reduce using rule 14 (expression -> expression AND expression .)
    NOT             reduce using rule 14 (expression -> expression AND expression .)
    VAR             reduce using rule 14 (expression -> expression AND expression .)
    error           reduce using rule 14 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 14 (expression -> expression AND expression .)
    IF              reduce using rule 14 (expression -> expression AND expression .)
    TRUE            reduce using rule 14 (expression -> expression AND expression .)
    FALSE           reduce using rule 14 (expression -> expression AND expression .)
    ELIF            reduce using rule 14 (expression -> expression AND expression .)
    ELSE            reduce using rule 14 (expression -> expression AND expression .)
    INTNUMBER       reduce using rule 14 (expression -> expression AND expression .)
    FLOATNUMBER     reduce using rule 14 (expression -> expression AND expression .)
    STRING          reduce using rule 14 (expression -> expression AND expression .)
    COMMENT         reduce using rule 14 (expression -> expression AND expression .)
    SHOW            reduce using rule 14 (expression -> expression AND expression .)
    LPAREN          reduce using rule 14 (expression -> expression AND expression .)
    LBRACE          reduce using rule 14 (expression -> expression AND expression .)
    $end            reduce using rule 14 (expression -> expression AND expression .)
    RBRACE          reduce using rule 14 (expression -> expression AND expression .)
    RPAREN          reduce using rule 14 (expression -> expression AND expression .)
    MULTIPLICATION  reduce using rule 14 (expression -> expression AND expression .)
    DIVIDE          reduce using rule 14 (expression -> expression AND expression .)
    COMMA           reduce using rule 14 (expression -> expression AND expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! GREATEREQUALS   [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! LESSEQUALS      [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! NOTEQUALS       [ reduce using rule 14 (expression -> expression AND expression .) ]


state 61

    (15) expression -> expression OR expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RETURN          reduce using rule 15 (expression -> expression OR expression .)
    WHILE           reduce using rule 15 (expression -> expression OR expression .)
    NOT             reduce using rule 15 (expression -> expression OR expression .)
    VAR             reduce using rule 15 (expression -> expression OR expression .)
    error           reduce using rule 15 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 15 (expression -> expression OR expression .)
    IF              reduce using rule 15 (expression -> expression OR expression .)
    TRUE            reduce using rule 15 (expression -> expression OR expression .)
    FALSE           reduce using rule 15 (expression -> expression OR expression .)
    ELIF            reduce using rule 15 (expression -> expression OR expression .)
    ELSE            reduce using rule 15 (expression -> expression OR expression .)
    INTNUMBER       reduce using rule 15 (expression -> expression OR expression .)
    FLOATNUMBER     reduce using rule 15 (expression -> expression OR expression .)
    STRING          reduce using rule 15 (expression -> expression OR expression .)
    COMMENT         reduce using rule 15 (expression -> expression OR expression .)
    SHOW            reduce using rule 15 (expression -> expression OR expression .)
    LPAREN          reduce using rule 15 (expression -> expression OR expression .)
    LBRACE          reduce using rule 15 (expression -> expression OR expression .)
    $end            reduce using rule 15 (expression -> expression OR expression .)
    RBRACE          reduce using rule 15 (expression -> expression OR expression .)
    RPAREN          reduce using rule 15 (expression -> expression OR expression .)
    MULTIPLICATION  reduce using rule 15 (expression -> expression OR expression .)
    DIVIDE          reduce using rule 15 (expression -> expression OR expression .)
    COMMA           reduce using rule 15 (expression -> expression OR expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! GREATEREQUALS   [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! LESSEQUALS      [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! NOTEQUALS       [ reduce using rule 15 (expression -> expression OR expression .) ]


state 62

    (17) expression -> expression EQUALSEQUALS expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RETURN          reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    WHILE           reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    NOT             reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    VAR             reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    error           reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    FUNCTION        reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    IF              reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    TRUE            reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    FALSE           reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    ELIF            reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    ELSE            reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    INTNUMBER       reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    FLOATNUMBER     reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    STRING          reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    COMMENT         reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    SHOW            reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    LPAREN          reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    LBRACE          reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    $end            reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    RBRACE          reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    RPAREN          reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    MULTIPLICATION  reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    DIVIDE          reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    COMMA           reduce using rule 17 (expression -> expression EQUALSEQUALS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]
  ! OR              [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]
  ! GREATER         [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]
  ! LESS            [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]
  ! GREATEREQUALS   [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]
  ! LESSEQUALS      [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 17 (expression -> expression EQUALSEQUALS expression .) ]


state 63

    (18) expression -> expression GREATER expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RETURN          reduce using rule 18 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 18 (expression -> expression GREATER expression .)
    NOT             reduce using rule 18 (expression -> expression GREATER expression .)
    VAR             reduce using rule 18 (expression -> expression GREATER expression .)
    error           reduce using rule 18 (expression -> expression GREATER expression .)
    FUNCTION        reduce using rule 18 (expression -> expression GREATER expression .)
    IF              reduce using rule 18 (expression -> expression GREATER expression .)
    TRUE            reduce using rule 18 (expression -> expression GREATER expression .)
    FALSE           reduce using rule 18 (expression -> expression GREATER expression .)
    ELIF            reduce using rule 18 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 18 (expression -> expression GREATER expression .)
    INTNUMBER       reduce using rule 18 (expression -> expression GREATER expression .)
    FLOATNUMBER     reduce using rule 18 (expression -> expression GREATER expression .)
    STRING          reduce using rule 18 (expression -> expression GREATER expression .)
    COMMENT         reduce using rule 18 (expression -> expression GREATER expression .)
    SHOW            reduce using rule 18 (expression -> expression GREATER expression .)
    LPAREN          reduce using rule 18 (expression -> expression GREATER expression .)
    LBRACE          reduce using rule 18 (expression -> expression GREATER expression .)
    $end            reduce using rule 18 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 18 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 18 (expression -> expression GREATER expression .)
    MULTIPLICATION  reduce using rule 18 (expression -> expression GREATER expression .)
    DIVIDE          reduce using rule 18 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 18 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! AND             [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! OR              [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! GREATEREQUALS   [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! LESSEQUALS      [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! NOTEQUALS       [ reduce using rule 18 (expression -> expression GREATER expression .) ]


state 64

    (19) expression -> expression LESS expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RETURN          reduce using rule 19 (expression -> expression LESS expression .)
    WHILE           reduce using rule 19 (expression -> expression LESS expression .)
    NOT             reduce using rule 19 (expression -> expression LESS expression .)
    VAR             reduce using rule 19 (expression -> expression LESS expression .)
    error           reduce using rule 19 (expression -> expression LESS expression .)
    FUNCTION        reduce using rule 19 (expression -> expression LESS expression .)
    IF              reduce using rule 19 (expression -> expression LESS expression .)
    TRUE            reduce using rule 19 (expression -> expression LESS expression .)
    FALSE           reduce using rule 19 (expression -> expression LESS expression .)
    ELIF            reduce using rule 19 (expression -> expression LESS expression .)
    ELSE            reduce using rule 19 (expression -> expression LESS expression .)
    INTNUMBER       reduce using rule 19 (expression -> expression LESS expression .)
    FLOATNUMBER     reduce using rule 19 (expression -> expression LESS expression .)
    STRING          reduce using rule 19 (expression -> expression LESS expression .)
    COMMENT         reduce using rule 19 (expression -> expression LESS expression .)
    SHOW            reduce using rule 19 (expression -> expression LESS expression .)
    LPAREN          reduce using rule 19 (expression -> expression LESS expression .)
    LBRACE          reduce using rule 19 (expression -> expression LESS expression .)
    $end            reduce using rule 19 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 19 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 19 (expression -> expression LESS expression .)
    MULTIPLICATION  reduce using rule 19 (expression -> expression LESS expression .)
    DIVIDE          reduce using rule 19 (expression -> expression LESS expression .)
    COMMA           reduce using rule 19 (expression -> expression LESS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 19 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression LESS expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression LESS expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression LESS expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 19 (expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 19 (expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 19 (expression -> expression LESS expression .) ]
  ! GREATEREQUALS   [ reduce using rule 19 (expression -> expression LESS expression .) ]
  ! LESSEQUALS      [ reduce using rule 19 (expression -> expression LESS expression .) ]
  ! NOTEQUALS       [ reduce using rule 19 (expression -> expression LESS expression .) ]


state 65

    (20) expression -> expression GREATEREQUALS expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RETURN          reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    WHILE           reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    NOT             reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    VAR             reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    error           reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    FUNCTION        reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    IF              reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    TRUE            reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    FALSE           reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    ELIF            reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    ELSE            reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    INTNUMBER       reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    FLOATNUMBER     reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    STRING          reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    COMMENT         reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    SHOW            reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    LPAREN          reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    LBRACE          reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    $end            reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    RBRACE          reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    RPAREN          reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    MULTIPLICATION  reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    DIVIDE          reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    COMMA           reduce using rule 20 (expression -> expression GREATEREQUALS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]
  ! GREATER         [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]
  ! LESS            [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]
  ! GREATEREQUALS   [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]
  ! LESSEQUALS      [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 20 (expression -> expression GREATEREQUALS expression .) ]


state 66

    (21) expression -> expression LESSEQUALS expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RETURN          reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    WHILE           reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    NOT             reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    VAR             reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    error           reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    FUNCTION        reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    IF              reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    TRUE            reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    FALSE           reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    ELIF            reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    ELSE            reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    INTNUMBER       reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    FLOATNUMBER     reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    STRING          reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    COMMENT         reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    SHOW            reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    LPAREN          reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    LBRACE          reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    $end            reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    RBRACE          reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    RPAREN          reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    MULTIPLICATION  reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    DIVIDE          reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    COMMA           reduce using rule 21 (expression -> expression LESSEQUALS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]
  ! GREATER         [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]
  ! LESS            [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]
  ! GREATEREQUALS   [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]
  ! LESSEQUALS      [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 21 (expression -> expression LESSEQUALS expression .) ]


state 67

    (22) expression -> expression NOTEQUALS expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    RETURN          reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    WHILE           reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    NOT             reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    VAR             reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    error           reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    FUNCTION        reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    IF              reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    TRUE            reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    FALSE           reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    ELIF            reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    ELSE            reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    INTNUMBER       reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    FLOATNUMBER     reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    STRING          reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    COMMENT         reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    SHOW            reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    LPAREN          reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    LBRACE          reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    $end            reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    RBRACE          reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    RPAREN          reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    MULTIPLICATION  reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    DIVIDE          reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    COMMA           reduce using rule 22 (expression -> expression NOTEQUALS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]
  ! GREATER         [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]
  ! LESS            [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]
  ! GREATEREQUALS   [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]
  ! LESSEQUALS      [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 22 (expression -> expression NOTEQUALS expression .) ]


state 68

    (61) statement -> WHILE LPAREN expression . RPAREN LBRACE statements RBRACE
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

    RPAREN          shift and go to state 80
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41


state 69

    (36) factor -> LPAREN expression RPAREN .

    MULTIPLICATION  reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    EQUALSEQUALS    reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    GREATEREQUALS   reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    LESSEQUALS      reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    VAR             reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    error           reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    ELIF            reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    INTNUMBER       reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    FLOATNUMBER     reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    STRING          reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    COMMENT         reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    SHOW            reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 36 (factor -> LPAREN expression RPAREN .)


state 70

    (37) factor -> LBRACE expression RBRACE .

    MULTIPLICATION  reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    DIVIDE          reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    PLUS            reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    MINUS           reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    AND             reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    OR              reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    EQUALSEQUALS    reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    GREATER         reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    LESS            reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    GREATEREQUALS   reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    LESSEQUALS      reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    NOTEQUALS       reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    RETURN          reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    WHILE           reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    NOT             reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    VAR             reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    error           reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    FUNCTION        reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    IF              reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    TRUE            reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    FALSE           reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    ELIF            reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    ELSE            reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    INTNUMBER       reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    FLOATNUMBER     reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    STRING          reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    COMMENT         reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    SHOW            reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    LPAREN          reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    LBRACE          reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    $end            reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    RBRACE          reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    RPAREN          reduce using rule 37 (factor -> LBRACE expression RBRACE .)
    COMMA           reduce using rule 37 (factor -> LBRACE expression RBRACE .)


state 71

    (8) expression -> term MULTIPLICATION factor .

    PLUS            reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    MINUS           reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    AND             reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    OR              reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    EQUALSEQUALS    reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    GREATER         reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    LESS            reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    GREATEREQUALS   reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    LESSEQUALS      reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    NOTEQUALS       reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    RETURN          reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    WHILE           reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    NOT             reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    VAR             reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    error           reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    FUNCTION        reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    IF              reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    TRUE            reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    FALSE           reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    ELIF            reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    ELSE            reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    INTNUMBER       reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    FLOATNUMBER     reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    STRING          reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    COMMENT         reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    SHOW            reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    LPAREN          reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    LBRACE          reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    $end            reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    RBRACE          reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    RPAREN          reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    MULTIPLICATION  reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    DIVIDE          reduce using rule 8 (expression -> term MULTIPLICATION factor .)
    COMMA           reduce using rule 8 (expression -> term MULTIPLICATION factor .)


state 72

    (9) expression -> term DIVIDE factor .

    PLUS            reduce using rule 9 (expression -> term DIVIDE factor .)
    MINUS           reduce using rule 9 (expression -> term DIVIDE factor .)
    AND             reduce using rule 9 (expression -> term DIVIDE factor .)
    OR              reduce using rule 9 (expression -> term DIVIDE factor .)
    EQUALSEQUALS    reduce using rule 9 (expression -> term DIVIDE factor .)
    GREATER         reduce using rule 9 (expression -> term DIVIDE factor .)
    LESS            reduce using rule 9 (expression -> term DIVIDE factor .)
    GREATEREQUALS   reduce using rule 9 (expression -> term DIVIDE factor .)
    LESSEQUALS      reduce using rule 9 (expression -> term DIVIDE factor .)
    NOTEQUALS       reduce using rule 9 (expression -> term DIVIDE factor .)
    RETURN          reduce using rule 9 (expression -> term DIVIDE factor .)
    WHILE           reduce using rule 9 (expression -> term DIVIDE factor .)
    NOT             reduce using rule 9 (expression -> term DIVIDE factor .)
    VAR             reduce using rule 9 (expression -> term DIVIDE factor .)
    error           reduce using rule 9 (expression -> term DIVIDE factor .)
    FUNCTION        reduce using rule 9 (expression -> term DIVIDE factor .)
    IF              reduce using rule 9 (expression -> term DIVIDE factor .)
    TRUE            reduce using rule 9 (expression -> term DIVIDE factor .)
    FALSE           reduce using rule 9 (expression -> term DIVIDE factor .)
    ELIF            reduce using rule 9 (expression -> term DIVIDE factor .)
    ELSE            reduce using rule 9 (expression -> term DIVIDE factor .)
    INTNUMBER       reduce using rule 9 (expression -> term DIVIDE factor .)
    FLOATNUMBER     reduce using rule 9 (expression -> term DIVIDE factor .)
    STRING          reduce using rule 9 (expression -> term DIVIDE factor .)
    COMMENT         reduce using rule 9 (expression -> term DIVIDE factor .)
    SHOW            reduce using rule 9 (expression -> term DIVIDE factor .)
    LPAREN          reduce using rule 9 (expression -> term DIVIDE factor .)
    LBRACE          reduce using rule 9 (expression -> term DIVIDE factor .)
    $end            reduce using rule 9 (expression -> term DIVIDE factor .)
    RBRACE          reduce using rule 9 (expression -> term DIVIDE factor .)
    RPAREN          reduce using rule 9 (expression -> term DIVIDE factor .)
    MULTIPLICATION  reduce using rule 9 (expression -> term DIVIDE factor .)
    DIVIDE          reduce using rule 9 (expression -> term DIVIDE factor .)
    COMMA           reduce using rule 9 (expression -> term DIVIDE factor .)


state 73

    (11) factor -> VAR EQUALS expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQUALSEQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATEREQUALS resolved as shift
  ! shift/reduce conflict for LESSEQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    MULTIPLICATION  reduce using rule 11 (factor -> VAR EQUALS expression .)
    DIVIDE          reduce using rule 11 (factor -> VAR EQUALS expression .)
    RETURN          reduce using rule 11 (factor -> VAR EQUALS expression .)
    WHILE           reduce using rule 11 (factor -> VAR EQUALS expression .)
    NOT             reduce using rule 11 (factor -> VAR EQUALS expression .)
    VAR             reduce using rule 11 (factor -> VAR EQUALS expression .)
    error           reduce using rule 11 (factor -> VAR EQUALS expression .)
    FUNCTION        reduce using rule 11 (factor -> VAR EQUALS expression .)
    IF              reduce using rule 11 (factor -> VAR EQUALS expression .)
    TRUE            reduce using rule 11 (factor -> VAR EQUALS expression .)
    FALSE           reduce using rule 11 (factor -> VAR EQUALS expression .)
    ELIF            reduce using rule 11 (factor -> VAR EQUALS expression .)
    ELSE            reduce using rule 11 (factor -> VAR EQUALS expression .)
    INTNUMBER       reduce using rule 11 (factor -> VAR EQUALS expression .)
    FLOATNUMBER     reduce using rule 11 (factor -> VAR EQUALS expression .)
    STRING          reduce using rule 11 (factor -> VAR EQUALS expression .)
    COMMENT         reduce using rule 11 (factor -> VAR EQUALS expression .)
    SHOW            reduce using rule 11 (factor -> VAR EQUALS expression .)
    LPAREN          reduce using rule 11 (factor -> VAR EQUALS expression .)
    LBRACE          reduce using rule 11 (factor -> VAR EQUALS expression .)
    $end            reduce using rule 11 (factor -> VAR EQUALS expression .)
    RBRACE          reduce using rule 11 (factor -> VAR EQUALS expression .)
    RPAREN          reduce using rule 11 (factor -> VAR EQUALS expression .)
    COMMA           reduce using rule 11 (factor -> VAR EQUALS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41

  ! PLUS            [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]
  ! MINUS           [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]
  ! AND             [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]
  ! OR              [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]
  ! EQUALSEQUALS    [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]
  ! GREATER         [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]
  ! LESS            [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]
  ! GREATEREQUALS   [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]
  ! LESSEQUALS      [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]
  ! NOTEQUALS       [ reduce using rule 11 (factor -> VAR EQUALS expression .) ]


state 74

    (58) function_call -> VAR LPAREN arguments . RPAREN

    RPAREN          shift and go to state 81


state 75

    (55) arguments -> expression .
    (56) arguments -> expression . COMMA arguments
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

    RPAREN          reduce using rule 55 (arguments -> expression .)
    COMMA           shift and go to state 82
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41


state 76

    (57) arguments -> empty .

    RPAREN          reduce using rule 57 (arguments -> empty .)


state 77

    (51) function_definition -> FUNCTION VAR LPAREN . parameters RPAREN LBRACE statements RBRACE
    (52) parameters -> . VAR
    (53) parameters -> . VAR COMMA parameters
    (54) parameters -> . empty
    (47) empty -> .

    VAR             shift and go to state 83
    RPAREN          reduce using rule 47 (empty -> .)

    parameters                     shift and go to state 84
    empty                          shift and go to state 85

state 78

    (39) if_statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41


state 79

    (35) factor -> SHOW LPAREN expression . RPAREN
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

    RPAREN          shift and go to state 87
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41


state 80

    (61) statement -> WHILE LPAREN expression RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 88


state 81

    (58) function_call -> VAR LPAREN arguments RPAREN .

    MULTIPLICATION  reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    PLUS            reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    MINUS           reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    AND             reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    OR              reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    EQUALSEQUALS    reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    GREATER         reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    LESS            reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    GREATEREQUALS   reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    LESSEQUALS      reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    NOTEQUALS       reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    RETURN          reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    WHILE           reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    NOT             reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    VAR             reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    error           reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    FUNCTION        reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    IF              reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    TRUE            reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    FALSE           reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    ELIF            reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    ELSE            reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    INTNUMBER       reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    FLOATNUMBER     reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    STRING          reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    COMMENT         reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    SHOW            reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    LBRACE          reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    $end            reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)
    COMMA           reduce using rule 58 (function_call -> VAR LPAREN arguments RPAREN .)


state 82

    (56) arguments -> expression COMMA . arguments
    (55) arguments -> . expression
    (56) arguments -> . expression COMMA arguments
    (57) arguments -> . empty
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (47) empty -> .
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    RPAREN          reduce using rule 47 (empty -> .)
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 75
    arguments                      shift and go to state 89
    empty                          shift and go to state 76
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 83

    (52) parameters -> VAR .
    (53) parameters -> VAR . COMMA parameters

    RPAREN          reduce using rule 52 (parameters -> VAR .)
    COMMA           shift and go to state 90


state 84

    (51) function_definition -> FUNCTION VAR LPAREN parameters . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 91


state 85

    (54) parameters -> empty .

    RPAREN          reduce using rule 54 (parameters -> empty .)


state 86

    (39) if_statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE elif_clauses
    (41) if_statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE else_clause
    (42) if_statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 92


state 87

    (35) factor -> SHOW LPAREN expression RPAREN .

    MULTIPLICATION  reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    PLUS            reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    MINUS           reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    AND             reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    OR              reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    EQUALSEQUALS    reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    GREATER         reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    LESS            reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    GREATEREQUALS   reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    LESSEQUALS      reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    RETURN          reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    WHILE           reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    NOT             reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    VAR             reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    error           reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    IF              reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    TRUE            reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    FALSE           reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    ELIF            reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    ELSE            reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    INTNUMBER       reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    FLOATNUMBER     reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    STRING          reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    COMMENT         reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    SHOW            reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    LPAREN          reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    LBRACE          reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    $end            reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    RBRACE          reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    RPAREN          reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)
    COMMA           reduce using rule 35 (factor -> SHOW LPAREN expression RPAREN .)


state 88

    (61) statement -> WHILE LPAREN expression RPAREN LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 4
    statements                     shift and go to state 93
    statement                      shift and go to state 3
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 89

    (56) arguments -> expression COMMA arguments .

    RPAREN          reduce using rule 56 (arguments -> expression COMMA arguments .)


state 90

    (53) parameters -> VAR COMMA . parameters
    (52) parameters -> . VAR
    (53) parameters -> . VAR COMMA parameters
    (54) parameters -> . empty
    (47) empty -> .

    VAR             shift and go to state 83
    RPAREN          reduce using rule 47 (empty -> .)

    parameters                     shift and go to state 94
    empty                          shift and go to state 85

state 91

    (51) function_definition -> FUNCTION VAR LPAREN parameters RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 95


state 92

    (39) if_statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE elif_clauses else_clause
    (40) if_statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE elif_clauses
    (41) if_statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE else_clause
    (42) if_statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 4
    statements                     shift and go to state 96
    statement                      shift and go to state 3
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 93

    (61) statement -> WHILE LPAREN expression RPAREN LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RBRACE          shift and go to state 97
    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 4
    statement                      shift and go to state 31
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 94

    (53) parameters -> VAR COMMA parameters .

    RPAREN          reduce using rule 53 (parameters -> VAR COMMA parameters .)


state 95

    (51) function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    statements                     shift and go to state 98
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 96

    (39) if_statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE elif_clauses else_clause
    (40) if_statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE elif_clauses
    (41) if_statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE else_clause
    (42) if_statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RBRACE          shift and go to state 99
    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 4
    statement                      shift and go to state 31
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 97

    (61) statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .

    RETURN          reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    NOT             reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    VAR             reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    error           reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    TRUE            reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    FALSE           reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    AND             reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    OR              reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    ELIF            reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    ELSE            reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    INTNUMBER       reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    FLOATNUMBER     reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    COMMENT         reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    SHOW            reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    LBRACE          reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 61 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)


state 98

    (51) function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RBRACE          shift and go to state 100
    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    statement                      shift and go to state 31
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 99

    (39) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE . elif_clauses else_clause
    (40) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE . elif_clauses
    (41) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE . else_clause
    (42) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .
    (43) elif_clauses -> . ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (44) elif_clauses -> . ELIF LPAREN expression RPAREN LBRACE statements RBRACE
    (45) else_clause -> . ELSE LBRACE statements RBRACE
    (46) else_clause -> . empty
    (47) empty -> .

  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for MINUS resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for AND resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for OR resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for EQUALSEQUALS resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for GREATER resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for LESS resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for GREATEREQUALS resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for LESSEQUALS resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for RETURN resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for WHILE resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for NOT resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for VAR resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for error resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for IF resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for TRUE resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for FALSE resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for INTNUMBER resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for FLOATNUMBER resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for STRING resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for COMMENT resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for SHOW resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for LBRACE resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for $end resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for RBRACE resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for MULTIPLICATION resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
  ! reduce/reduce conflict for COMMA resolved using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    AND             reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    OR              reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    EQUALSEQUALS    reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    GREATER         reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LESS            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    GREATEREQUALS   reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LESSEQUALS      reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NOTEQUALS       reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NOT             reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    VAR             reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    error           reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    TRUE            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FALSE           reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    INTNUMBER       reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FLOATNUMBER     reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    COMMENT         reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    SHOW            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LBRACE          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RPAREN          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    MULTIPLICATION  reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    DIVIDE          reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    COMMA           reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    ELIF            shift and go to state 103
    ELSE            shift and go to state 104

  ! ELIF            [ reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .) ]
  ! ELSE            [ reduce using rule 42 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .) ]
  ! PLUS            [ reduce using rule 47 (empty -> .) ]
  ! MINUS           [ reduce using rule 47 (empty -> .) ]
  ! AND             [ reduce using rule 47 (empty -> .) ]
  ! OR              [ reduce using rule 47 (empty -> .) ]
  ! EQUALSEQUALS    [ reduce using rule 47 (empty -> .) ]
  ! GREATER         [ reduce using rule 47 (empty -> .) ]
  ! LESS            [ reduce using rule 47 (empty -> .) ]
  ! GREATEREQUALS   [ reduce using rule 47 (empty -> .) ]
  ! LESSEQUALS      [ reduce using rule 47 (empty -> .) ]
  ! NOTEQUALS       [ reduce using rule 47 (empty -> .) ]
  ! RETURN          [ reduce using rule 47 (empty -> .) ]
  ! WHILE           [ reduce using rule 47 (empty -> .) ]
  ! NOT             [ reduce using rule 47 (empty -> .) ]
  ! VAR             [ reduce using rule 47 (empty -> .) ]
  ! error           [ reduce using rule 47 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 47 (empty -> .) ]
  ! IF              [ reduce using rule 47 (empty -> .) ]
  ! TRUE            [ reduce using rule 47 (empty -> .) ]
  ! FALSE           [ reduce using rule 47 (empty -> .) ]
  ! ELIF            [ reduce using rule 47 (empty -> .) ]
  ! ELSE            [ reduce using rule 47 (empty -> .) ]
  ! INTNUMBER       [ reduce using rule 47 (empty -> .) ]
  ! FLOATNUMBER     [ reduce using rule 47 (empty -> .) ]
  ! STRING          [ reduce using rule 47 (empty -> .) ]
  ! COMMENT         [ reduce using rule 47 (empty -> .) ]
  ! SHOW            [ reduce using rule 47 (empty -> .) ]
  ! LPAREN          [ reduce using rule 47 (empty -> .) ]
  ! LBRACE          [ reduce using rule 47 (empty -> .) ]
  ! $end            [ reduce using rule 47 (empty -> .) ]
  ! RBRACE          [ reduce using rule 47 (empty -> .) ]
  ! RPAREN          [ reduce using rule 47 (empty -> .) ]
  ! MULTIPLICATION  [ reduce using rule 47 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 47 (empty -> .) ]
  ! COMMA           [ reduce using rule 47 (empty -> .) ]

    elif_clauses                   shift and go to state 101
    else_clause                    shift and go to state 102
    empty                          shift and go to state 105

state 100

    (51) function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .

    RETURN          reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    NOT             reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    VAR             reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    error           reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    TRUE            reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FALSE           reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    AND             reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    OR              reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    ELIF            reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    ELSE            reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    INTNUMBER       reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    FLOATNUMBER     reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    COMMENT         reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    SHOW            reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    LBRACE          reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 51 (function_definition -> FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE .)


state 101

    (39) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses . else_clause
    (40) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .
    (45) else_clause -> . ELSE LBRACE statements RBRACE
    (46) else_clause -> . empty
    (47) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for AND resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for OR resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for EQUALSEQUALS resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for GREATER resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for LESS resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for GREATEREQUALS resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for LESSEQUALS resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for NOTEQUALS resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for RETURN resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for NOT resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for VAR resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for error resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for IF resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for TRUE resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for FALSE resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for ELIF resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for INTNUMBER resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for FLOATNUMBER resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for STRING resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for COMMENT resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for SHOW resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for LBRACE resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for $end resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for MULTIPLICATION resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
  ! reduce/reduce conflict for COMMA resolved using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    PLUS            reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    MINUS           reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    AND             reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    OR              reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    EQUALSEQUALS    reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    GREATER         reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    LESS            reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    GREATEREQUALS   reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    LESSEQUALS      reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    NOTEQUALS       reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    RETURN          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    WHILE           reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    NOT             reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    VAR             reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    error           reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    FUNCTION        reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    IF              reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    TRUE            reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    FALSE           reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    ELIF            reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    INTNUMBER       reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    FLOATNUMBER     reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    STRING          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    COMMENT         reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    SHOW            reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    LPAREN          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    LBRACE          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    $end            reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    RBRACE          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    RPAREN          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    MULTIPLICATION  reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    DIVIDE          reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    COMMA           reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    ELSE            shift and go to state 104

  ! ELSE            [ reduce using rule 40 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .) ]
  ! PLUS            [ reduce using rule 47 (empty -> .) ]
  ! MINUS           [ reduce using rule 47 (empty -> .) ]
  ! AND             [ reduce using rule 47 (empty -> .) ]
  ! OR              [ reduce using rule 47 (empty -> .) ]
  ! EQUALSEQUALS    [ reduce using rule 47 (empty -> .) ]
  ! GREATER         [ reduce using rule 47 (empty -> .) ]
  ! LESS            [ reduce using rule 47 (empty -> .) ]
  ! GREATEREQUALS   [ reduce using rule 47 (empty -> .) ]
  ! LESSEQUALS      [ reduce using rule 47 (empty -> .) ]
  ! NOTEQUALS       [ reduce using rule 47 (empty -> .) ]
  ! RETURN          [ reduce using rule 47 (empty -> .) ]
  ! WHILE           [ reduce using rule 47 (empty -> .) ]
  ! NOT             [ reduce using rule 47 (empty -> .) ]
  ! VAR             [ reduce using rule 47 (empty -> .) ]
  ! error           [ reduce using rule 47 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 47 (empty -> .) ]
  ! IF              [ reduce using rule 47 (empty -> .) ]
  ! TRUE            [ reduce using rule 47 (empty -> .) ]
  ! FALSE           [ reduce using rule 47 (empty -> .) ]
  ! ELIF            [ reduce using rule 47 (empty -> .) ]
  ! ELSE            [ reduce using rule 47 (empty -> .) ]
  ! INTNUMBER       [ reduce using rule 47 (empty -> .) ]
  ! FLOATNUMBER     [ reduce using rule 47 (empty -> .) ]
  ! STRING          [ reduce using rule 47 (empty -> .) ]
  ! COMMENT         [ reduce using rule 47 (empty -> .) ]
  ! SHOW            [ reduce using rule 47 (empty -> .) ]
  ! LPAREN          [ reduce using rule 47 (empty -> .) ]
  ! LBRACE          [ reduce using rule 47 (empty -> .) ]
  ! $end            [ reduce using rule 47 (empty -> .) ]
  ! RBRACE          [ reduce using rule 47 (empty -> .) ]
  ! RPAREN          [ reduce using rule 47 (empty -> .) ]
  ! MULTIPLICATION  [ reduce using rule 47 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 47 (empty -> .) ]
  ! COMMA           [ reduce using rule 47 (empty -> .) ]

    else_clause                    shift and go to state 106
    empty                          shift and go to state 105

state 102

    (41) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .

    PLUS            reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    MINUS           reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    AND             reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    OR              reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    EQUALSEQUALS    reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    GREATER         reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    LESS            reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    GREATEREQUALS   reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    LESSEQUALS      reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    NOTEQUALS       reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    RETURN          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    WHILE           reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    NOT             reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    VAR             reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    error           reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    FUNCTION        reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    IF              reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    TRUE            reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    FALSE           reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    ELIF            reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    ELSE            reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    INTNUMBER       reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    FLOATNUMBER     reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    STRING          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    COMMENT         reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    SHOW            reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    LPAREN          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    LBRACE          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    $end            reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    RBRACE          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    RPAREN          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    MULTIPLICATION  reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    DIVIDE          reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)
    COMMA           reduce using rule 41 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause .)


state 103

    (43) elif_clauses -> ELIF . LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (44) elif_clauses -> ELIF . LPAREN expression RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 107


state 104

    (45) else_clause -> ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 108


state 105

    (46) else_clause -> empty .

    PLUS            reduce using rule 46 (else_clause -> empty .)
    MINUS           reduce using rule 46 (else_clause -> empty .)
    AND             reduce using rule 46 (else_clause -> empty .)
    OR              reduce using rule 46 (else_clause -> empty .)
    EQUALSEQUALS    reduce using rule 46 (else_clause -> empty .)
    GREATER         reduce using rule 46 (else_clause -> empty .)
    LESS            reduce using rule 46 (else_clause -> empty .)
    GREATEREQUALS   reduce using rule 46 (else_clause -> empty .)
    LESSEQUALS      reduce using rule 46 (else_clause -> empty .)
    NOTEQUALS       reduce using rule 46 (else_clause -> empty .)
    RETURN          reduce using rule 46 (else_clause -> empty .)
    WHILE           reduce using rule 46 (else_clause -> empty .)
    NOT             reduce using rule 46 (else_clause -> empty .)
    VAR             reduce using rule 46 (else_clause -> empty .)
    error           reduce using rule 46 (else_clause -> empty .)
    FUNCTION        reduce using rule 46 (else_clause -> empty .)
    IF              reduce using rule 46 (else_clause -> empty .)
    TRUE            reduce using rule 46 (else_clause -> empty .)
    FALSE           reduce using rule 46 (else_clause -> empty .)
    ELIF            reduce using rule 46 (else_clause -> empty .)
    ELSE            reduce using rule 46 (else_clause -> empty .)
    INTNUMBER       reduce using rule 46 (else_clause -> empty .)
    FLOATNUMBER     reduce using rule 46 (else_clause -> empty .)
    STRING          reduce using rule 46 (else_clause -> empty .)
    COMMENT         reduce using rule 46 (else_clause -> empty .)
    SHOW            reduce using rule 46 (else_clause -> empty .)
    LPAREN          reduce using rule 46 (else_clause -> empty .)
    LBRACE          reduce using rule 46 (else_clause -> empty .)
    $end            reduce using rule 46 (else_clause -> empty .)
    RBRACE          reduce using rule 46 (else_clause -> empty .)
    RPAREN          reduce using rule 46 (else_clause -> empty .)
    MULTIPLICATION  reduce using rule 46 (else_clause -> empty .)
    DIVIDE          reduce using rule 46 (else_clause -> empty .)
    COMMA           reduce using rule 46 (else_clause -> empty .)


state 106

    (39) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .

    PLUS            reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    MINUS           reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    AND             reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    OR              reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    EQUALSEQUALS    reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    GREATER         reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    LESS            reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    GREATEREQUALS   reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    LESSEQUALS      reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    NOTEQUALS       reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    RETURN          reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    WHILE           reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    NOT             reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    VAR             reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    error           reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    FUNCTION        reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    IF              reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    TRUE            reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    FALSE           reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    ELIF            reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    ELSE            reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    INTNUMBER       reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    FLOATNUMBER     reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    STRING          reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    COMMENT         reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    SHOW            reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    LPAREN          reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    LBRACE          reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    $end            reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    RBRACE          reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    RPAREN          reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    MULTIPLICATION  reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    DIVIDE          reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)
    COMMA           reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause .)


state 107

    (43) elif_clauses -> ELIF LPAREN . expression RPAREN LBRACE statements RBRACE elif_clauses
    (44) elif_clauses -> ELIF LPAREN . expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 109
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 108

    (45) else_clause -> ELSE LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    statements                     shift and go to state 110
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 109

    (43) elif_clauses -> ELIF LPAREN expression . RPAREN LBRACE statements RBRACE elif_clauses
    (44) elif_clauses -> ELIF LPAREN expression . RPAREN LBRACE statements RBRACE
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (17) expression -> expression . EQUALSEQUALS expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESS expression
    (20) expression -> expression . GREATEREQUALS expression
    (21) expression -> expression . LESSEQUALS expression
    (22) expression -> expression . NOTEQUALS expression

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    AND             shift and go to state 34
    OR              shift and go to state 35
    EQUALSEQUALS    shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    GREATEREQUALS   shift and go to state 39
    LESSEQUALS      shift and go to state 40
    NOTEQUALS       shift and go to state 41


state 110

    (45) else_clause -> ELSE LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RBRACE          shift and go to state 112
    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    statement                      shift and go to state 31
    expression                     shift and go to state 4
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 111

    (43) elif_clauses -> ELIF LPAREN expression RPAREN . LBRACE statements RBRACE elif_clauses
    (44) elif_clauses -> ELIF LPAREN expression RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 113


state 112

    (45) else_clause -> ELSE LBRACE statements RBRACE .

    PLUS            reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    MINUS           reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    AND             reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    OR              reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    EQUALSEQUALS    reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    GREATER         reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    LESS            reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    GREATEREQUALS   reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    LESSEQUALS      reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    NOTEQUALS       reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    RETURN          reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    NOT             reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    VAR             reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    error           reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    TRUE            reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    FALSE           reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    ELIF            reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    ELSE            reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    INTNUMBER       reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    FLOATNUMBER     reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    STRING          reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    COMMENT         reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    SHOW            reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    LPAREN          reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    LBRACE          reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    RPAREN          reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    MULTIPLICATION  reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    DIVIDE          reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)
    COMMA           reduce using rule 45 (else_clause -> ELSE LBRACE statements RBRACE .)


state 113

    (43) elif_clauses -> ELIF LPAREN expression RPAREN LBRACE . statements RBRACE elif_clauses
    (44) elif_clauses -> ELIF LPAREN expression RPAREN LBRACE . statements RBRACE
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 4
    statements                     shift and go to state 114
    statement                      shift and go to state 3
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 114

    (43) elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements . RBRACE elif_clauses
    (44) elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements . RBRACE
    (2) statements -> statements . statement
    (4) statement -> . expression
    (5) statement -> . function_definition
    (59) statement -> . RETURN expression
    (61) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term MULTIPLICATION factor
    (9) expression -> . term DIVIDE factor
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . NOT expression
    (17) expression -> . expression EQUALSEQUALS expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESS expression
    (20) expression -> . expression GREATEREQUALS expression
    (21) expression -> . expression LESSEQUALS expression
    (22) expression -> . expression NOTEQUALS expression
    (23) expression -> . term
    (48) expression -> . if_statement
    (49) expression -> . VAR
    (50) expression -> . error
    (51) function_definition -> . FUNCTION VAR LPAREN parameters RPAREN LBRACE statements RBRACE
    (24) term -> . factor
    (39) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses else_clause
    (40) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (41) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE else_clause
    (42) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) factor -> . VAR
    (11) factor -> . VAR EQUALS expression
    (12) factor -> . TRUE
    (13) factor -> . FALSE
    (25) factor -> . AND
    (26) factor -> . OR
    (27) factor -> . NOT
    (28) factor -> . IF
    (29) factor -> . ELIF
    (30) factor -> . ELSE
    (31) factor -> . INTNUMBER
    (32) factor -> . FLOATNUMBER
    (33) factor -> . STRING
    (34) factor -> . COMMENT
    (35) factor -> . SHOW LPAREN expression RPAREN
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . LBRACE expression RBRACE
    (38) factor -> . MINUS factor
    (60) factor -> . function_call
    (58) function_call -> . VAR LPAREN arguments RPAREN

    RBRACE          shift and go to state 115
    RETURN          shift and go to state 6
    WHILE           shift and go to state 7
    NOT             shift and go to state 15
    VAR             shift and go to state 17
    error           shift and go to state 18
    FUNCTION        shift and go to state 19
    IF              shift and go to state 20
    TRUE            shift and go to state 21
    FALSE           shift and go to state 22
    AND             shift and go to state 13
    OR              shift and go to state 14
    ELIF            shift and go to state 23
    ELSE            shift and go to state 24
    INTNUMBER       shift and go to state 25
    FLOATNUMBER     shift and go to state 26
    STRING          shift and go to state 27
    COMMENT         shift and go to state 28
    SHOW            shift and go to state 29
    LPAREN          shift and go to state 8
    LBRACE          shift and go to state 9
    MINUS           shift and go to state 11

    expression                     shift and go to state 4
    statement                      shift and go to state 31
    function_definition            shift and go to state 5
    term                           shift and go to state 10
    factor                         shift and go to state 12
    if_statement                   shift and go to state 16
    function_call                  shift and go to state 30

state 115

    (43) elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE . elif_clauses
    (44) elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .
    (43) elif_clauses -> . ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses
    (44) elif_clauses -> . ELIF LPAREN expression RPAREN LBRACE statements RBRACE

  ! shift/reduce conflict for ELIF resolved as shift
    ELSE            reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    PLUS            reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    AND             reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    OR              reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    EQUALSEQUALS    reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    GREATER         reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LESS            reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    GREATEREQUALS   reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LESSEQUALS      reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NOTEQUALS       reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NOT             reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    VAR             reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    error           reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    TRUE            reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FALSE           reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    INTNUMBER       reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FLOATNUMBER     reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    COMMENT         reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    SHOW            reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LBRACE          reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RPAREN          reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    MULTIPLICATION  reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    DIVIDE          reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    COMMA           reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .)
    ELIF            shift and go to state 103

  ! ELIF            [ reduce using rule 44 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE .) ]

    elif_clauses                   shift and go to state 116

state 116

    (43) elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .

    ELSE            reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    PLUS            reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    MINUS           reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    AND             reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    OR              reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    EQUALSEQUALS    reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    GREATER         reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    LESS            reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    GREATEREQUALS   reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    LESSEQUALS      reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    NOTEQUALS       reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    RETURN          reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    WHILE           reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    NOT             reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    VAR             reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    error           reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    FUNCTION        reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    IF              reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    TRUE            reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    FALSE           reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    ELIF            reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    INTNUMBER       reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    FLOATNUMBER     reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    STRING          reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    COMMENT         reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    SHOW            reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    LPAREN          reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    LBRACE          reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    $end            reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    RBRACE          reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    RPAREN          reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    MULTIPLICATION  reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    DIVIDE          reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)
    COMMA           reduce using rule 43 (elif_clauses -> ELIF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 4 resolved as shift
WARNING: shift/reduce conflict for AND in state 4 resolved as shift
WARNING: shift/reduce conflict for OR in state 4 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 10 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 15 resolved as shift
WARNING: shift/reduce conflict for VAR in state 15 resolved as shift
WARNING: shift/reduce conflict for error in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 15 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 15 resolved as shift
WARNING: shift/reduce conflict for AND in state 15 resolved as shift
WARNING: shift/reduce conflict for OR in state 15 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 15 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 15 resolved as shift
WARNING: shift/reduce conflict for INTNUMBER in state 15 resolved as shift
WARNING: shift/reduce conflict for FLOATNUMBER in state 15 resolved as shift
WARNING: shift/reduce conflict for STRING in state 15 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 15 resolved as shift
WARNING: shift/reduce conflict for SHOW in state 15 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 17 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 20 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 42 resolved as shift
WARNING: shift/reduce conflict for OR in state 42 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for AND in state 52 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 52 resolved as shift
WARNING: shift/reduce conflict for LESS in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 60 resolved as shift
WARNING: shift/reduce conflict for LESS in state 60 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 61 resolved as shift
WARNING: shift/reduce conflict for LESS in state 61 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 62 resolved as shift
WARNING: shift/reduce conflict for LESS in state 62 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 63 resolved as shift
WARNING: shift/reduce conflict for LESS in state 63 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 64 resolved as shift
WARNING: shift/reduce conflict for LESS in state 64 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 65 resolved as shift
WARNING: shift/reduce conflict for LESS in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 66 resolved as shift
WARNING: shift/reduce conflict for LESS in state 66 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 67 resolved as shift
WARNING: shift/reduce conflict for LESS in state 67 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUALSEQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 73 resolved as shift
WARNING: shift/reduce conflict for LESS in state 73 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for LESSEQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 99 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 99 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 99 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 99 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 101 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 101 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 115 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (factor -> VAR)
WARNING: rejected rule (expression -> VAR) in state 17
WARNING: reduce/reduce conflict in state 99 resolved using rule (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE)
WARNING: rejected rule (empty -> <empty>) in state 99
WARNING: reduce/reduce conflict in state 101 resolved using rule (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE elif_clauses)
WARNING: rejected rule (empty -> <empty>) in state 101
WARNING: Rule (expression -> VAR) is never reduced
